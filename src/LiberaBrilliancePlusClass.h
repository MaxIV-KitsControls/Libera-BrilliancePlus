/*----- PROTECTED REGION ID(LiberaBrilliancePlusClass.h) ENABLED START -----*/
//=============================================================================
//
// file :        LiberaBrilliancePlusClass.h
//
// description : Include for the LiberaBrilliancePlus root class.
//               This class is the singleton class for
//                the LiberaBrilliancePlus device class.
//               It contains all properties and methods which the 
//               LiberaBrilliancePlus requires only once e.g. the commands.
//
// project :     Libera BPM Device Server
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#ifndef LiberaBrilliancePlusClass_H
#define LiberaBrilliancePlusClass_H

#include <tango.h>
#include <LiberaBrilliancePlus.h>


/*----- PROTECTED REGION END -----*/	//	LiberaBrilliancePlusClass.h


namespace LiberaBrilliancePlus_ns
{
/*----- PROTECTED REGION ID(LiberaBrilliancePlusClass::classes for dynamic creation) ENABLED START -----*/


/*----- PROTECTED REGION END -----*/	//	LiberaBrilliancePlusClass::classes for dynamic creation

//=========================================
//	Define classes for attributes
//=========================================
//	Attribute ExternalTriggerDelay class definition
class ExternalTriggerDelayAttrib: public Tango::Attr
{
public:
	ExternalTriggerDelayAttrib():Attr("ExternalTriggerDelay",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~ExternalTriggerDelayAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ExternalTriggerDelay(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_ExternalTriggerDelay(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ExternalTriggerDelay_allowed(ty);}
};

//	Attribute PMOffset class definition
class PMOffsetAttrib: public Tango::Attr
{
public:
	PMOffsetAttrib():Attr("PMOffset",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~PMOffsetAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_PMOffset(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_PMOffset(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_PMOffset_allowed(ty);}
};

//	Attribute PMNotified class definition
class PMNotifiedAttrib: public Tango::Attr
{
public:
	PMNotifiedAttrib():Attr("PMNotified",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~PMNotifiedAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_PMNotified(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_PMNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_PMNotified_allowed(ty);}
};

//	Attribute InterlockXNotified class definition
class InterlockXNotifiedAttrib: public Tango::Attr
{
public:
	InterlockXNotifiedAttrib():Attr("InterlockXNotified",
			Tango::DEV_BOOLEAN, Tango::READ) {};
	~InterlockXNotifiedAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockXNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockXNotified_allowed(ty);}
};

//	Attribute InterlockYNotified class definition
class InterlockYNotifiedAttrib: public Tango::Attr
{
public:
	InterlockYNotifiedAttrib():Attr("InterlockYNotified",
			Tango::DEV_BOOLEAN, Tango::READ) {};
	~InterlockYNotifiedAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockYNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockYNotified_allowed(ty);}
};

//	Attribute InterlockAttnNotified class definition
class InterlockAttnNotifiedAttrib: public Tango::Attr
{
public:
	InterlockAttnNotifiedAttrib():Attr("InterlockAttnNotified",
			Tango::DEV_BOOLEAN, Tango::READ) {};
	~InterlockAttnNotifiedAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockAttnNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockAttnNotified_allowed(ty);}
};

//	Attribute InterlockADCPreFilterNotified class definition
class InterlockADCPreFilterNotifiedAttrib: public Tango::Attr
{
public:
	InterlockADCPreFilterNotifiedAttrib():Attr("InterlockADCPreFilterNotified",
			Tango::DEV_BOOLEAN, Tango::READ) {};
	~InterlockADCPreFilterNotifiedAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockADCPreFilterNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockADCPreFilterNotified_allowed(ty);}
};

//	Attribute InterlockADCPostFilterNotified class definition
class InterlockADCPostFilterNotifiedAttrib: public Tango::Attr
{
public:
	InterlockADCPostFilterNotifiedAttrib():Attr("InterlockADCPostFilterNotified",
			Tango::DEV_BOOLEAN, Tango::READ) {};
	~InterlockADCPostFilterNotifiedAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockADCPostFilterNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockADCPostFilterNotified_allowed(ty);}
};

//	Attribute InterlockLimitXMin class definition
class InterlockLimitXMinAttrib: public Tango::Attr
{
public:
	InterlockLimitXMinAttrib():Attr("InterlockLimitXMin",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~InterlockLimitXMinAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockLimitXMin(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockLimitXMin_allowed(ty);}
};

//	Attribute InterlockLimitXMax class definition
class InterlockLimitXMaxAttrib: public Tango::Attr
{
public:
	InterlockLimitXMaxAttrib():Attr("InterlockLimitXMax",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~InterlockLimitXMaxAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockLimitXMax(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockLimitXMax_allowed(ty);}
};

//	Attribute InterlockLimitYMin class definition
class InterlockLimitYMinAttrib: public Tango::Attr
{
public:
	InterlockLimitYMinAttrib():Attr("InterlockLimitYMin",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~InterlockLimitYMinAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockLimitYMin(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockLimitYMin_allowed(ty);}
};

//	Attribute InterlockLimitYMax class definition
class InterlockLimitYMaxAttrib: public Tango::Attr
{
public:
	InterlockLimitYMaxAttrib():Attr("InterlockLimitYMax",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~InterlockLimitYMaxAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockLimitYMax(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockLimitYMax_allowed(ty);}
};

//	Attribute ConditionSwitching class definition
class ConditionSwitchingAttrib: public Tango::Attr
{
public:
	ConditionSwitchingAttrib():Attr("ConditionSwitching",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~ConditionSwitchingAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ConditionSwitching(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_ConditionSwitching(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ConditionSwitching_allowed(ty);}
};

//	Attribute ExternalSwitching class definition
class ExternalSwitchingAttrib: public Tango::Attr
{
public:
	ExternalSwitchingAttrib():Attr("ExternalSwitching",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~ExternalSwitchingAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ExternalSwitching(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_ExternalSwitching(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ExternalSwitching_allowed(ty);}
};

//	Attribute SwitchingDelay class definition
class SwitchingDelayAttrib: public Tango::Attr
{
public:
	SwitchingDelayAttrib():Attr("SwitchingDelay",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~SwitchingDelayAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SwitchingDelay(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SwitchingDelay(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SwitchingDelay_allowed(ty);}
};

//	Attribute DSCMode class definition
class DSCModeAttrib: public Tango::Attr
{
public:
	DSCModeAttrib():Attr("DSCMode",
			Tango::DEV_SHORT, Tango::READ_WRITE) {};
	~DSCModeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_DSCMode(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_DSCMode(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DSCMode_allowed(ty);}
};

//	Attribute AGCEnabled class definition
class AGCEnabledAttrib: public Tango::Attr
{
public:
	AGCEnabledAttrib():Attr("AGCEnabled",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~AGCEnabledAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_AGCEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_AGCEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_AGCEnabled_allowed(ty);}
};

//	Attribute Gain class definition
class GainAttrib: public Tango::Attr
{
public:
	GainAttrib():Attr("Gain",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~GainAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Gain(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_Gain(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Gain_allowed(ty);}
};

//	Attribute TimePhase class definition
class TimePhaseAttrib: public Tango::Attr
{
public:
	TimePhaseAttrib():Attr("TimePhase",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~TimePhaseAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_TimePhase(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_TimePhase(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_TimePhase_allowed(ty);}
};

//	Attribute InterlockEnabled class definition
class InterlockEnabledAttrib: public Tango::Attr
{
public:
	InterlockEnabledAttrib():Attr("InterlockEnabled",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~InterlockEnabledAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockEnabled_allowed(ty);}
};

//	Attribute InterlockGainDependentEnabled class definition
class InterlockGainDependentEnabledAttrib: public Tango::Attr
{
public:
	InterlockGainDependentEnabledAttrib():Attr("InterlockGainDependentEnabled",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~InterlockGainDependentEnabledAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockGainDependentEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockGainDependentEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockGainDependentEnabled_allowed(ty);}
};

//	Attribute InterlockOverflowThreshold class definition
class InterlockOverflowThresholdAttrib: public Tango::Attr
{
public:
	InterlockOverflowThresholdAttrib():Attr("InterlockOverflowThreshold",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~InterlockOverflowThresholdAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockOverflowThreshold(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockOverflowThreshold(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockOverflowThreshold_allowed(ty);}
};

//	Attribute InterlockOverflowDuration class definition
class InterlockOverflowDurationAttrib: public Tango::Attr
{
public:
	InterlockOverflowDurationAttrib():Attr("InterlockOverflowDuration",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~InterlockOverflowDurationAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockOverflowDuration(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockOverflowDuration(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockOverflowDuration_allowed(ty);}
};

//	Attribute InterlockGainDependentThreshold class definition
class InterlockGainDependentThresholdAttrib: public Tango::Attr
{
public:
	InterlockGainDependentThresholdAttrib():Attr("InterlockGainDependentThreshold",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~InterlockGainDependentThresholdAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockGainDependentThreshold(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockGainDependentThreshold(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockGainDependentThreshold_allowed(ty);}
};

//	Attribute Kx class definition
class KxAttrib: public Tango::Attr
{
public:
	KxAttrib():Attr("Kx",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~KxAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Kx(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_Kx(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Kx_allowed(ty);}
};

//	Attribute Ky class definition
class KyAttrib: public Tango::Attr
{
public:
	KyAttrib():Attr("Ky",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~KyAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Ky(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_Ky(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Ky_allowed(ty);}
};

//	Attribute XOffset class definition
class XOffsetAttrib: public Tango::Attr
{
public:
	XOffsetAttrib():Attr("XOffset",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~XOffsetAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XOffset(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_XOffset(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XOffset_allowed(ty);}
};

//	Attribute YOffset class definition
class YOffsetAttrib: public Tango::Attr
{
public:
	YOffsetAttrib():Attr("YOffset",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~YOffsetAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_YOffset(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_YOffset(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_YOffset_allowed(ty);}
};

//	Attribute TDEnabled class definition
class TDEnabledAttrib: public Tango::Attr
{
public:
	TDEnabledAttrib():Attr("TDEnabled",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~TDEnabledAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_TDEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_TDEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_TDEnabled_allowed(ty);}
};

//	Attribute TDBufferSize class definition
class TDBufferSizeAttrib: public Tango::Attr
{
public:
	TDBufferSizeAttrib():Attr("TDBufferSize",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~TDBufferSizeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_TDBufferSize(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_TDBufferSize(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_TDBufferSize_allowed(ty);}
};

//	Attribute TDDecimationFactor class definition
class TDDecimationFactorAttrib: public Tango::Attr
{
public:
	TDDecimationFactorAttrib():Attr("TDDecimationFactor",
			Tango::DEV_USHORT, Tango::READ_WRITE) {};
	~TDDecimationFactorAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_TDDecimationFactor(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_TDDecimationFactor(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_TDDecimationFactor_allowed(ty);}
};

//	Attribute TDTriggerOffset class definition
class TDTriggerOffsetAttrib: public Tango::Attr
{
public:
	TDTriggerOffsetAttrib():Attr("TDTriggerOffset",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~TDTriggerOffsetAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_TDTriggerOffset(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_TDTriggerOffset(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_TDTriggerOffset_allowed(ty);}
};

//	Attribute TDBufferFreezingEnabled class definition
class TDBufferFreezingEnabledAttrib: public Tango::Attr
{
public:
	TDBufferFreezingEnabledAttrib():Attr("TDBufferFreezingEnabled",
			Tango::DEV_BOOLEAN, Tango::READ) {};
	~TDBufferFreezingEnabledAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_TDBufferFreezingEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_TDBufferFreezingEnabled_allowed(ty);}
};

//	Attribute TDBufferFrozen class definition
class TDBufferFrozenAttrib: public Tango::Attr
{
public:
	TDBufferFrozenAttrib():Attr("TDBufferFrozen",
			Tango::DEV_BOOLEAN, Tango::READ) {};
	~TDBufferFrozenAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_TDBufferFrozen(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_TDBufferFrozen_allowed(ty);}
};

//	Attribute TDTriggerCounter class definition
class TDTriggerCounterAttrib: public Tango::Attr
{
public:
	TDTriggerCounterAttrib():Attr("TDTriggerCounter",
			Tango::DEV_LONG, Tango::READ) {};
	~TDTriggerCounterAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_TDTriggerCounter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_TDTriggerCounter_allowed(ty);}
};

//	Attribute Ks class definition
class KsAttrib: public Tango::Attr
{
public:
	KsAttrib():Attr("Ks",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~KsAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Ks(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_Ks(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Ks_allowed(ty);}
};

//	Attribute QOffset class definition
class QOffsetAttrib: public Tango::Attr
{
public:
	QOffsetAttrib():Attr("QOffset",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~QOffsetAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QOffset(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_QOffset(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QOffset_allowed(ty);}
};

//	Attribute SOffset class definition
class SOffsetAttrib: public Tango::Attr
{
public:
	SOffsetAttrib():Attr("SOffset",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~SOffsetAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SOffset(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SOffset(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SOffset_allowed(ty);}
};

//	Attribute SynchronizationStatus class definition
class SynchronizationStatusAttrib: public Tango::Attr
{
public:
	SynchronizationStatusAttrib():Attr("SynchronizationStatus",
			Tango::DEV_SHORT, Tango::READ) {};
	~SynchronizationStatusAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SynchronizationStatus(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SynchronizationStatus_allowed(ty);}
};

//	Attribute MaxADC class definition
class MaxADCAttrib: public Tango::Attr
{
public:
	MaxADCAttrib():Attr("MaxADC",
			Tango::DEV_LONG, Tango::READ) {};
	~MaxADCAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_MaxADC(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_MaxADC_allowed(ty);}
};

//	Attribute SPThreshold class definition
class SPThresholdAttrib: public Tango::Attr
{
public:
	SPThresholdAttrib():Attr("SPThreshold",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~SPThresholdAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SPThreshold(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SPThreshold(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SPThreshold_allowed(ty);}
};

//	Attribute SPnBefore class definition
class SPnBeforeAttrib: public Tango::Attr
{
public:
	SPnBeforeAttrib():Attr("SPnBefore",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~SPnBeforeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SPnBefore(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SPnBefore(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SPnBefore_allowed(ty);}
};

//	Attribute SPnAfter class definition
class SPnAfterAttrib: public Tango::Attr
{
public:
	SPnAfterAttrib():Attr("SPnAfter",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~SPnAfterAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SPnAfter(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SPnAfter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SPnAfter_allowed(ty);}
};

//	Attribute PMBufferSize class definition
class PMBufferSizeAttrib: public Tango::Attr
{
public:
	PMBufferSizeAttrib():Attr("PMBufferSize",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~PMBufferSizeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_PMBufferSize(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_PMBufferSize(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_PMBufferSize_allowed(ty);}
};

//	Attribute PMSource class definition
class PMSourceAttrib: public Tango::Attr
{
public:
	PMSourceAttrib():Attr("PMSource",
			Tango::DEV_SHORT, Tango::READ_WRITE) {};
	~PMSourceAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_PMSource(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_PMSource(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_PMSource_allowed(ty);}
};

//	Attribute SynchronizeLMT class definition
class SynchronizeLMTAttrib: public Tango::Attr
{
public:
	SynchronizeLMTAttrib():Attr("SynchronizeLMT",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~SynchronizeLMTAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SynchronizeLMT(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SynchronizeLMT(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SynchronizeLMT_allowed(ty);}
};

//	Attribute InterlockFilterOverflow class definition
class InterlockFilterOverflowAttrib: public Tango::Attr
{
public:
	InterlockFilterOverflowAttrib():Attr("InterlockFilterOverflow",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~InterlockFilterOverflowAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockFilterOverflow(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockFilterOverflow(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockFilterOverflow_allowed(ty);}
};

//	Attribute InterlockFilterPosition class definition
class InterlockFilterPositionAttrib: public Tango::Attr
{
public:
	InterlockFilterPositionAttrib():Attr("InterlockFilterPosition",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~InterlockFilterPositionAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockFilterPosition(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockFilterPosition(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockFilterPosition_allowed(ty);}
};

//	Attribute UserData class definition
class UserDataAttrib: public Tango::SpectrumAttr
{
public:
	UserDataAttrib():SpectrumAttr("UserData",
			Tango::DEV_SHORT, Tango::READ, 256) {};
	~UserDataAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_UserData(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_UserData_allowed(ty);}
};

//	Attribute logs class definition
class logsAttrib: public Tango::SpectrumAttr
{
public:
	logsAttrib():SpectrumAttr("logs",
			Tango::DEV_STRING, Tango::READ, 2048) {};
	~logsAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_logs(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_logs_allowed(ty);}
};

//	Attribute XPosTD class definition
class XPosTDAttrib: public Tango::SpectrumAttr
{
public:
	XPosTDAttrib():SpectrumAttr("XPosTD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~XPosTDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XPosTD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XPosTD_allowed(ty);}
};

//	Attribute YPosTD class definition
class YPosTDAttrib: public Tango::SpectrumAttr
{
public:
	YPosTDAttrib():SpectrumAttr("YPosTD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~YPosTDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_YPosTD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_YPosTD_allowed(ty);}
};

//	Attribute QuadTD class definition
class QuadTDAttrib: public Tango::SpectrumAttr
{
public:
	QuadTDAttrib():SpectrumAttr("QuadTD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~QuadTDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QuadTD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QuadTD_allowed(ty);}
};

//	Attribute SumTD class definition
class SumTDAttrib: public Tango::SpectrumAttr
{
public:
	SumTDAttrib():SpectrumAttr("SumTD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~SumTDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SumTD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SumTD_allowed(ty);}
};

//	Attribute VaTD class definition
class VaTDAttrib: public Tango::SpectrumAttr
{
public:
	VaTDAttrib():SpectrumAttr("VaTD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VaTDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VaTD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VaTD_allowed(ty);}
};

//	Attribute VbTD class definition
class VbTDAttrib: public Tango::SpectrumAttr
{
public:
	VbTDAttrib():SpectrumAttr("VbTD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VbTDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VbTD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VbTD_allowed(ty);}
};

//	Attribute VcTD class definition
class VcTDAttrib: public Tango::SpectrumAttr
{
public:
	VcTDAttrib():SpectrumAttr("VcTD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VcTDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VcTD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VcTD_allowed(ty);}
};

//	Attribute VdTD class definition
class VdTDAttrib: public Tango::SpectrumAttr
{
public:
	VdTDAttrib():SpectrumAttr("VdTD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VdTDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VdTD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VdTD_allowed(ty);}
};


//=========================================
//	Define classes for commands
//=========================================
//	Command GetParameters class definition
class GetParametersClass : public Tango::Command
{
public:
	GetParametersClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	GetParametersClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~GetParametersClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_GetParameters_allowed(any);}
};

//	Command ResetPMNotification class definition
class ResetPMNotificationClass : public Tango::Command
{
public:
	ResetPMNotificationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	ResetPMNotificationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~ResetPMNotificationClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ResetPMNotification_allowed(any);}
};

//	Command ResetInterlockNotification class definition
class ResetInterlockNotificationClass : public Tango::Command
{
public:
	ResetInterlockNotificationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	ResetInterlockNotificationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~ResetInterlockNotificationClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ResetInterlockNotification_allowed(any);}
};

//	Command SetInterlockConfiguration class definition
class SetInterlockConfigurationClass : public Tango::Command
{
public:
	SetInterlockConfigurationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetInterlockConfigurationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetInterlockConfigurationClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SetInterlockConfiguration_allowed(any);}
};

//	Command SetTimeOnNextTrigger class definition
class SetTimeOnNextTriggerClass : public Tango::Command
{
public:
	SetTimeOnNextTriggerClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetTimeOnNextTriggerClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetTimeOnNextTriggerClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SetTimeOnNextTrigger_allowed(any);}
};

//	Command SaveDSCParameters class definition
class SaveDSCParametersClass : public Tango::Command
{
public:
	SaveDSCParametersClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SaveDSCParametersClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SaveDSCParametersClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SaveDSCParameters_allowed(any);}
};

//	Command ReloadSystemProperties class definition
class ReloadSystemPropertiesClass : public Tango::Command
{
public:
	ReloadSystemPropertiesClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	ReloadSystemPropertiesClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~ReloadSystemPropertiesClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ReloadSystemProperties_allowed(any);}
};

//	Command SetRefIncoherence class definition
class SetRefIncoherenceClass : public Tango::Command
{
public:
	SetRefIncoherenceClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetRefIncoherenceClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetRefIncoherenceClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SetRefIncoherence_allowed(any);}
};

//	Command MagicCommand class definition
class MagicCommandClass : public Tango::Command
{
public:
	MagicCommandClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	MagicCommandClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~MagicCommandClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_MagicCommand_allowed(any);}
};

//	Command EnableTDBufferFreezing class definition
class EnableTDBufferFreezingClass : public Tango::Command
{
public:
	EnableTDBufferFreezingClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	EnableTDBufferFreezingClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~EnableTDBufferFreezingClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_EnableTDBufferFreezing_allowed(any);}
};

//	Command DisableTDBufferFreezing class definition
class DisableTDBufferFreezingClass : public Tango::Command
{
public:
	DisableTDBufferFreezingClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	DisableTDBufferFreezingClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~DisableTDBufferFreezingClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DisableTDBufferFreezing_allowed(any);}
};

//	Command EnableTD class definition
class EnableTDClass : public Tango::Command
{
public:
	EnableTDClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	EnableTDClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~EnableTDClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_EnableTD_allowed(any);}
};

//	Command DisableTD class definition
class DisableTDClass : public Tango::Command
{
public:
	DisableTDClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	DisableTDClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~DisableTDClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DisableTD_allowed(any);}
};

//	Command UnfreezeTDBuffer class definition
class UnfreezeTDBufferClass : public Tango::Command
{
public:
	UnfreezeTDBufferClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	UnfreezeTDBufferClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~UnfreezeTDBufferClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_UnfreezeTDBuffer_allowed(any);}
};

//	Command ForceInitSettings class definition
class ForceInitSettingsClass : public Tango::Command
{
public:
	ForceInitSettingsClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	ForceInitSettingsClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~ForceInitSettingsClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ForceInitSettings_allowed(any);}
};

//	Command SetTraceLevel class definition
class SetTraceLevelClass : public Tango::Command
{
public:
	SetTraceLevelClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetTraceLevelClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetTraceLevelClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SetTraceLevel_allowed(any);}
};

//	Command DisableAllSignals class definition
class DisableAllSignalsClass : public Tango::Command
{
public:
	DisableAllSignalsClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	DisableAllSignalsClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~DisableAllSignalsClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DisableAllSignals_allowed(any);}
};


/**
 *	The LiberaBrilliancePlusClass singleton definition
 */

#ifdef _TG_WINDOWS_
class __declspec(dllexport)  LiberaBrilliancePlusClass : public Tango::DeviceClass
#else
class LiberaBrilliancePlusClass : public Tango::DeviceClass
#endif
{
	/*----- PROTECTED REGION ID(LiberaBrilliancePlusClass::Additionnal DServer data members) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrilliancePlusClass::Additionnal DServer data members

	//	Class properties data members
	public:
		//	InterlockConfiguration:	The user defined interlock configuration. This is the configuration that should be applied on the Libera in case the device `finds`
		//  the Libera in its default startup configuration when it is itself starting up or executing its Init TANGO command. This configuration
		//  can also be applied using the dedicated ``SetInterlockConfiguration`` expert command.
		//  Parameters mapping:
		//  [0] Interlock : mode - [0]: disabled, [1]: enabled, [3]: enabled with gain dependency
		//  [1] Interlock : threshold : X low in mm
		//  [2] Interlock : threshold : X high in mm
		//  [3] Interlock : threshold : Z low in mm (i.e. Y low in the Libera terminology)
		//  [4] Interlock : threshold : Z high in mm (i.e. Y high in the Libera terminology)
		//  [5] Interlock : overflow limit (ADC threshold)
		//  [6] Interlock : overflow duration (num of overloaded ADC samples before raising intlck)
		//  [7] Interlock : gain limit in dBm  (intlck not active under this limit) - valid range is [-60, 0]
		vector<Tango::DevDouble>	interlockConfiguration;
		//	EnableDDOptionalData:	Enables/Disables  DD optional data (IxDD and QxDD)
		Tango::DevBoolean	enableDDOptionalData;
		//	EnableSAOptionalData:	Enables/disables SA optional Data (currently not used)
		Tango::DevBoolean	enableSAOptionalData;
		//	EnableSAHistoryOptionalData:	Enables/disables SA History optional data (sum history)
		Tango::DevBoolean	enableSAHistoryOptionalData;
		//	EnableADCOptionalData:	Enables/disables ADC optional data (currently not used)
		Tango::DevBoolean	enableADCOptionalData;
		//	Institute:	0: TANGO_INSTITUTE (GENERIC)
		//  1: ALBA
		//  2: ESRF
		//  3: ELETTRA
		//  4: SOLEIL
		Tango::DevShort	institute;
		//	EnableTDOptionalData:	Enables/Disables  TD optional data (IxDD and QxDD)
		Tango::DevBoolean	enableTDOptionalData;
		//	InterlockGainDependentThreshold:	
		string	interlockGainDependentThreshold;
	public:
		//	write class properties data members
		Tango::DbData	cl_prop;
		Tango::DbData	cl_def_prop;
		Tango::DbData	dev_def_prop;
	
		//	Method prototypes
		static LiberaBrilliancePlusClass *init(const char *);
		static LiberaBrilliancePlusClass *instance();
		~LiberaBrilliancePlusClass();
		Tango::DbDatum	get_class_property(string &);
		Tango::DbDatum	get_default_device_property(string &);
		Tango::DbDatum	get_default_class_property(string &);
	
	protected:
		LiberaBrilliancePlusClass(string &);
		static LiberaBrilliancePlusClass *_instance;
		void command_factory();
		void attribute_factory(vector<Tango::Attr *> &);
		void pipe_factory();
		void write_class_property();
		void set_default_property();
		void get_class_property();
		string get_cvstag();
		string get_cvsroot();
	
	private:
		void device_factory(const Tango::DevVarStringArray *);
		void create_static_attribute_list(vector<Tango::Attr *> &);
		void erase_dynamic_attributes(const Tango::DevVarStringArray *,vector<Tango::Attr *> &);
		vector<string>	defaultAttList;
		Tango::Attr *get_attr_object_by_name(vector<Tango::Attr *> &att_list, string attname);
};

}	//	End of namespace

#endif   //	LiberaBrilliancePlus_H
