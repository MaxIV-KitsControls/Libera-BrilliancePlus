/*----- PROTECTED REGION ID(LiberaBrilliancePlusClass.h) ENABLED START -----*/
//=============================================================================
//
// file :        LiberaBrilliancePlusClass.h
//
// description : Include for the LiberaBrilliancePlusClass root class.
//               This class is the singleton class for.
//               the LiberaBrilliancePlus device class..
//               It contains all properties and methods which the .
//               LiberaBrilliancePlus requires only once e.g. the commands.
//
// project :     Libera BPM Device Server.
//
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// SVN only:
// $HeadURL:  $
//
// CVS only:
// $Source:  $
// $Log:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#ifndef LIBERABRILLIANCEPLUSCLASS_H
#define LIBERABRILLIANCEPLUSCLASS_H

#include <tango.h>
#include <LiberaBrilliancePlus.h>

/*----- PROTECTED REGION END -----*/

namespace LiberaBrilliancePlus_ns
{
	/*----- PROTECTED REGION ID(LiberaBrilliancePlus::classes for dynamic creation) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaBrilliancePlus::classes for dynamic creation



//=========================================
//	Define classes for attributes
//=========================================
//	Attribute LiberaModel class definition
class LiberaModelAttrib: public Tango::Attr
{
public:
	LiberaModelAttrib():Attr("LiberaModel",
	                   Tango::DEV_USHORT, Tango::READ) {};
	~LiberaModelAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_LiberaModel(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_LiberaModel_allowed(ty);}
};

//	Attribute DDEnabled class definition
class DDEnabledAttrib: public Tango::Attr
{
public:
	DDEnabledAttrib():Attr("DDEnabled",
	                   Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~DDEnabledAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_DDEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_DDEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DDEnabled_allowed(ty);}
};

//	Attribute DDBufferSize class definition
class DDBufferSizeAttrib: public Tango::Attr
{
public:
	DDBufferSizeAttrib():Attr("DDBufferSize",
	                   Tango::DEV_LONG, Tango::READ_WRITE) {};
	~DDBufferSizeAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_DDBufferSize(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_DDBufferSize(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DDBufferSize_allowed(ty);}
};

//	Attribute DDDecimationFactor class definition
class DDDecimationFactorAttrib: public Tango::Attr
{
public:
	DDDecimationFactorAttrib():Attr("DDDecimationFactor",
	                   Tango::DEV_USHORT, Tango::READ_WRITE) {};
	~DDDecimationFactorAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_DDDecimationFactor(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_DDDecimationFactor(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DDDecimationFactor_allowed(ty);}
};

//	Attribute DDTriggerOffset class definition
class DDTriggerOffsetAttrib: public Tango::Attr
{
public:
	DDTriggerOffsetAttrib():Attr("DDTriggerOffset",
	                   Tango::DEV_LONG, Tango::READ_WRITE) {};
	~DDTriggerOffsetAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_DDTriggerOffset(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_DDTriggerOffset(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DDTriggerOffset_allowed(ty);}
};

//	Attribute DDBufferFreezingEnabled class definition
class DDBufferFreezingEnabledAttrib: public Tango::Attr
{
public:
	DDBufferFreezingEnabledAttrib():Attr("DDBufferFreezingEnabled",
	                   Tango::DEV_BOOLEAN, Tango::READ) {};
	~DDBufferFreezingEnabledAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_DDBufferFreezingEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DDBufferFreezingEnabled_allowed(ty);}
};

//	Attribute DDBufferFrozen class definition
class DDBufferFrozenAttrib: public Tango::Attr
{
public:
	DDBufferFrozenAttrib():Attr("DDBufferFrozen",
	                   Tango::DEV_BOOLEAN, Tango::READ) {};
	~DDBufferFrozenAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_DDBufferFrozen(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DDBufferFrozen_allowed(ty);}
};

//	Attribute DDTriggerCounter class definition
class DDTriggerCounterAttrib: public Tango::Attr
{
public:
	DDTriggerCounterAttrib():Attr("DDTriggerCounter",
	                   Tango::DEV_LONG, Tango::READ) {};
	~DDTriggerCounterAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_DDTriggerCounter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DDTriggerCounter_allowed(ty);}
};

//	Attribute ExternalTriggerEnabled class definition
class ExternalTriggerEnabledAttrib: public Tango::Attr
{
public:
	ExternalTriggerEnabledAttrib():Attr("ExternalTriggerEnabled",
	                   Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~ExternalTriggerEnabledAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ExternalTriggerEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_ExternalTriggerEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ExternalTriggerEnabled_allowed(ty);}
};

//	Attribute ExternalTriggerDelay class definition
class ExternalTriggerDelayAttrib: public Tango::Attr
{
public:
	ExternalTriggerDelayAttrib():Attr("ExternalTriggerDelay",
	                   Tango::DEV_LONG, Tango::READ_WRITE) {};
	~ExternalTriggerDelayAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ExternalTriggerDelay(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_ExternalTriggerDelay(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ExternalTriggerDelay_allowed(ty);}
};

//	Attribute SAEnabled class definition
class SAEnabledAttrib: public Tango::Attr
{
public:
	SAEnabledAttrib():Attr("SAEnabled",
	                   Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~SAEnabledAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SAEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SAEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SAEnabled_allowed(ty);}
};

//	Attribute VaSA class definition
class VaSAAttrib: public Tango::Attr
{
public:
	VaSAAttrib():Attr("VaSA",
	                   Tango::DEV_DOUBLE, Tango::READ) {};
	~VaSAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VaSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VaSA_allowed(ty);}
};

//	Attribute VbSA class definition
class VbSAAttrib: public Tango::Attr
{
public:
	VbSAAttrib():Attr("VbSA",
	                   Tango::DEV_DOUBLE, Tango::READ) {};
	~VbSAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VbSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VbSA_allowed(ty);}
};

//	Attribute VcSA class definition
class VcSAAttrib: public Tango::Attr
{
public:
	VcSAAttrib():Attr("VcSA",
	                   Tango::DEV_DOUBLE, Tango::READ) {};
	~VcSAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VcSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VcSA_allowed(ty);}
};

//	Attribute VdSA class definition
class VdSAAttrib: public Tango::Attr
{
public:
	VdSAAttrib():Attr("VdSA",
	                   Tango::DEV_DOUBLE, Tango::READ) {};
	~VdSAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VdSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VdSA_allowed(ty);}
};

//	Attribute XPosSA class definition
class XPosSAAttrib: public Tango::Attr
{
public:
	XPosSAAttrib():Attr("XPosSA",
	                   Tango::DEV_DOUBLE, Tango::READ) {};
	~XPosSAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XPosSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XPosSA_allowed(ty);}
};

//	Attribute ZPosSA class definition
class ZPosSAAttrib: public Tango::Attr
{
public:
	ZPosSAAttrib():Attr("ZPosSA",
	                   Tango::DEV_DOUBLE, Tango::READ) {};
	~ZPosSAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ZPosSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ZPosSA_allowed(ty);}
};

//	Attribute SumSA class definition
class SumSAAttrib: public Tango::Attr
{
public:
	SumSAAttrib():Attr("SumSA",
	                   Tango::DEV_DOUBLE, Tango::READ) {};
	~SumSAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SumSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SumSA_allowed(ty);}
};

//	Attribute QuadSA class definition
class QuadSAAttrib: public Tango::Attr
{
public:
	QuadSAAttrib():Attr("QuadSA",
	                   Tango::DEV_DOUBLE, Tango::READ) {};
	~QuadSAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QuadSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QuadSA_allowed(ty);}
};

//	Attribute CxSA class definition
class CxSAAttrib: public Tango::Attr
{
public:
	CxSAAttrib():Attr("CxSA",
	                   Tango::DEV_LONG, Tango::READ) {};
	~CxSAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_CxSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_CxSA_allowed(ty);}
};

//	Attribute CzSA class definition
class CzSAAttrib: public Tango::Attr
{
public:
	CzSAAttrib():Attr("CzSA",
	                   Tango::DEV_LONG, Tango::READ) {};
	~CzSAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_CzSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_CzSA_allowed(ty);}
};

//	Attribute SAStatNumSamples class definition
class SAStatNumSamplesAttrib: public Tango::Attr
{
public:
	SAStatNumSamplesAttrib():Attr("SAStatNumSamples",
	                   Tango::DEV_LONG, Tango::READ_WRITE) {};
	~SAStatNumSamplesAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SAStatNumSamples(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SAStatNumSamples(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SAStatNumSamples_allowed(ty);}
};

//	Attribute XMeanPosSA class definition
class XMeanPosSAAttrib: public Tango::Attr
{
public:
	XMeanPosSAAttrib():Attr("XMeanPosSA",
	                   Tango::DEV_DOUBLE, Tango::READ) {};
	~XMeanPosSAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XMeanPosSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XMeanPosSA_allowed(ty);}
};

//	Attribute ZMeanPosSA class definition
class ZMeanPosSAAttrib: public Tango::Attr
{
public:
	ZMeanPosSAAttrib():Attr("ZMeanPosSA",
	                   Tango::DEV_DOUBLE, Tango::READ) {};
	~ZMeanPosSAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ZMeanPosSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ZMeanPosSA_allowed(ty);}
};

//	Attribute XRMSPosSA class definition
class XRMSPosSAAttrib: public Tango::Attr
{
public:
	XRMSPosSAAttrib():Attr("XRMSPosSA",
	                   Tango::DEV_DOUBLE, Tango::READ) {};
	~XRMSPosSAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XRMSPosSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XRMSPosSA_allowed(ty);}
};

//	Attribute ZRMSPosSA class definition
class ZRMSPosSAAttrib: public Tango::Attr
{
public:
	ZRMSPosSAAttrib():Attr("ZRMSPosSA",
	                   Tango::DEV_DOUBLE, Tango::READ) {};
	~ZRMSPosSAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ZRMSPosSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ZRMSPosSA_allowed(ty);}
};

//	Attribute XPeakPosSA class definition
class XPeakPosSAAttrib: public Tango::Attr
{
public:
	XPeakPosSAAttrib():Attr("XPeakPosSA",
	                   Tango::DEV_DOUBLE, Tango::READ) {};
	~XPeakPosSAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XPeakPosSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XPeakPosSA_allowed(ty);}
};

//	Attribute ZPeakPosSA class definition
class ZPeakPosSAAttrib: public Tango::Attr
{
public:
	ZPeakPosSAAttrib():Attr("ZPeakPosSA",
	                   Tango::DEV_DOUBLE, Tango::READ) {};
	~ZPeakPosSAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ZPeakPosSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ZPeakPosSA_allowed(ty);}
};

//	Attribute SumMeanSA class definition
class SumMeanSAAttrib: public Tango::Attr
{
public:
	SumMeanSAAttrib():Attr("SumMeanSA",
	                   Tango::DEV_DOUBLE, Tango::READ) {};
	~SumMeanSAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SumMeanSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SumMeanSA_allowed(ty);}
};

//	Attribute ADCEnabled class definition
class ADCEnabledAttrib: public Tango::Attr
{
public:
	ADCEnabledAttrib():Attr("ADCEnabled",
	                   Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~ADCEnabledAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ADCEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_ADCEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ADCEnabled_allowed(ty);}
};

//	Attribute ADCBufferSize class definition
class ADCBufferSizeAttrib: public Tango::Attr
{
public:
	ADCBufferSizeAttrib():Attr("ADCBufferSize",
	                   Tango::DEV_LONG, Tango::READ_WRITE) {};
	~ADCBufferSizeAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ADCBufferSize(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_ADCBufferSize(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ADCBufferSize_allowed(ty);}
};

//	Attribute PMOffset class definition
class PMOffsetAttrib: public Tango::Attr
{
public:
	PMOffsetAttrib():Attr("PMOffset",
	                   Tango::DEV_LONG, Tango::READ_WRITE) {};
	~PMOffsetAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_PMOffset(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_PMOffset(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_PMOffset_allowed(ty);}
};

//	Attribute PMNotified class definition
class PMNotifiedAttrib: public Tango::Attr
{
public:
	PMNotifiedAttrib():Attr("PMNotified",
	                   Tango::DEV_BOOLEAN, Tango::READ) {};
	~PMNotifiedAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_PMNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_PMNotified_allowed(ty);}
};

//	Attribute PMNotificationCounter class definition
class PMNotificationCounterAttrib: public Tango::Attr
{
public:
	PMNotificationCounterAttrib():Attr("PMNotificationCounter",
	                   Tango::DEV_SHORT, Tango::READ) {};
	~PMNotificationCounterAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_PMNotificationCounter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_PMNotificationCounter_allowed(ty);}
};

//	Attribute InterlockXNotified class definition
class InterlockXNotifiedAttrib: public Tango::Attr
{
public:
	InterlockXNotifiedAttrib():Attr("InterlockXNotified",
	                   Tango::DEV_BOOLEAN, Tango::READ) {};
	~InterlockXNotifiedAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockXNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockXNotified_allowed(ty);}
};

//	Attribute InterlockZNotified class definition
class InterlockZNotifiedAttrib: public Tango::Attr
{
public:
	InterlockZNotifiedAttrib():Attr("InterlockZNotified",
	                   Tango::DEV_BOOLEAN, Tango::READ) {};
	~InterlockZNotifiedAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockZNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockZNotified_allowed(ty);}
};

//	Attribute InterlockAttnNotified class definition
class InterlockAttnNotifiedAttrib: public Tango::Attr
{
public:
	InterlockAttnNotifiedAttrib():Attr("InterlockAttnNotified",
	                   Tango::DEV_BOOLEAN, Tango::READ) {};
	~InterlockAttnNotifiedAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockAttnNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockAttnNotified_allowed(ty);}
};

//	Attribute InterlockADCPreFilterNotified class definition
class InterlockADCPreFilterNotifiedAttrib: public Tango::Attr
{
public:
	InterlockADCPreFilterNotifiedAttrib():Attr("InterlockADCPreFilterNotified",
	                   Tango::DEV_BOOLEAN, Tango::READ) {};
	~InterlockADCPreFilterNotifiedAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockADCPreFilterNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockADCPreFilterNotified_allowed(ty);}
};

//	Attribute InterlockADCPostFilterNotified class definition
class InterlockADCPostFilterNotifiedAttrib: public Tango::Attr
{
public:
	InterlockADCPostFilterNotifiedAttrib():Attr("InterlockADCPostFilterNotified",
	                   Tango::DEV_BOOLEAN, Tango::READ) {};
	~InterlockADCPostFilterNotifiedAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockADCPostFilterNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockADCPostFilterNotified_allowed(ty);}
};

//	Attribute XLow class definition
class XLowAttrib: public Tango::Attr
{
public:
	XLowAttrib():Attr("XLow",
	                   Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~XLowAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XLow(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_XLow(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XLow_allowed(ty);}
};

//	Attribute XHigh class definition
class XHighAttrib: public Tango::Attr
{
public:
	XHighAttrib():Attr("XHigh",
	                   Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~XHighAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XHigh(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_XHigh(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XHigh_allowed(ty);}
};

//	Attribute ZLow class definition
class ZLowAttrib: public Tango::Attr
{
public:
	ZLowAttrib():Attr("ZLow",
	                   Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~ZLowAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ZLow(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_ZLow(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ZLow_allowed(ty);}
};

//	Attribute ZHigh class definition
class ZHighAttrib: public Tango::Attr
{
public:
	ZHighAttrib():Attr("ZHigh",
	                   Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~ZHighAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ZHigh(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_ZHigh(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ZHigh_allowed(ty);}
};

//	Attribute AutoSwitchingEnabled class definition
class AutoSwitchingEnabledAttrib: public Tango::Attr
{
public:
	AutoSwitchingEnabledAttrib():Attr("AutoSwitchingEnabled",
	                   Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~AutoSwitchingEnabledAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_AutoSwitchingEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_AutoSwitchingEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_AutoSwitchingEnabled_allowed(ty);}
};

//	Attribute Switches class definition
class SwitchesAttrib: public Tango::Attr
{
public:
	SwitchesAttrib():Attr("Switches",
	                   Tango::DEV_SHORT, Tango::READ_WRITE) {};
	~SwitchesAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Switches(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_Switches(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Switches_allowed(ty);}
};

//	Attribute ExternalSwitching class definition
class ExternalSwitchingAttrib: public Tango::Attr
{
public:
	ExternalSwitchingAttrib():Attr("ExternalSwitching",
	                   Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~ExternalSwitchingAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ExternalSwitching(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_ExternalSwitching(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ExternalSwitching_allowed(ty);}
};

//	Attribute SwitchingDelay class definition
class SwitchingDelayAttrib: public Tango::Attr
{
public:
	SwitchingDelayAttrib():Attr("SwitchingDelay",
	                   Tango::DEV_LONG, Tango::READ_WRITE) {};
	~SwitchingDelayAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SwitchingDelay(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SwitchingDelay(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SwitchingDelay_allowed(ty);}
};

//	Attribute OffsetTune class definition
class OffsetTuneAttrib: public Tango::Attr
{
public:
	OffsetTuneAttrib():Attr("OffsetTune",
	                   Tango::DEV_LONG, Tango::READ_WRITE) {};
	~OffsetTuneAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_OffsetTune(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_OffsetTune(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_OffsetTune_allowed(ty);}
};

//	Attribute CompensateTune class definition
class CompensateTuneAttrib: public Tango::Attr
{
public:
	CompensateTuneAttrib():Attr("CompensateTune",
	                   Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~CompensateTuneAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_CompensateTune(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_CompensateTune(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_CompensateTune_allowed(ty);}
};

//	Attribute DSCMode class definition
class DSCModeAttrib: public Tango::Attr
{
public:
	DSCModeAttrib():Attr("DSCMode",
	                   Tango::DEV_SHORT, Tango::READ_WRITE) {};
	~DSCModeAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_DSCMode(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_DSCMode(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DSCMode_allowed(ty);}
};

//	Attribute AGCEnabled class definition
class AGCEnabledAttrib: public Tango::Attr
{
public:
	AGCEnabledAttrib():Attr("AGCEnabled",
	                   Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~AGCEnabledAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_AGCEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_AGCEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_AGCEnabled_allowed(ty);}
};

//	Attribute Gain class definition
class GainAttrib: public Tango::Attr
{
public:
	GainAttrib():Attr("Gain",
	                   Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~GainAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Gain(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_Gain(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Gain_allowed(ty);}
};

//	Attribute HasMAFSupport class definition
class HasMAFSupportAttrib: public Tango::Attr
{
public:
	HasMAFSupportAttrib():Attr("HasMAFSupport",
	                   Tango::DEV_BOOLEAN, Tango::READ) {};
	~HasMAFSupportAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_HasMAFSupport(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_HasMAFSupport_allowed(ty);}
};

//	Attribute MAFLength class definition
class MAFLengthAttrib: public Tango::Attr
{
public:
	MAFLengthAttrib():Attr("MAFLength",
	                   Tango::DEV_LONG, Tango::READ_WRITE) {};
	~MAFLengthAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_MAFLength(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_MAFLength(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_MAFLength_allowed(ty);}
};

//	Attribute MAFDelay class definition
class MAFDelayAttrib: public Tango::Attr
{
public:
	MAFDelayAttrib():Attr("MAFDelay",
	                   Tango::DEV_LONG, Tango::READ_WRITE) {};
	~MAFDelayAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_MAFDelay(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_MAFDelay(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_MAFDelay_allowed(ty);}
};

//	Attribute MachineTime class definition
class MachineTimeAttrib: public Tango::Attr
{
public:
	MachineTimeAttrib():Attr("MachineTime",
	                   Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~MachineTimeAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_MachineTime(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_MachineTime(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_MachineTime_allowed(ty);}
};

//	Attribute TimePhase class definition
class TimePhaseAttrib: public Tango::Attr
{
public:
	TimePhaseAttrib():Attr("TimePhase",
	                   Tango::DEV_LONG, Tango::READ_WRITE) {};
	~TimePhaseAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_TimePhase(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_TimePhase(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_TimePhase_allowed(ty);}
};

//	Attribute SystemTime class definition
class SystemTimeAttrib: public Tango::Attr
{
public:
	SystemTimeAttrib():Attr("SystemTime",
	                   Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~SystemTimeAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SystemTime(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SystemTime(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SystemTime_allowed(ty);}
};

//	Attribute SCPLLStatus class definition
class SCPLLStatusAttrib: public Tango::Attr
{
public:
	SCPLLStatusAttrib():Attr("SCPLLStatus",
	                   Tango::DEV_BOOLEAN, Tango::READ) {};
	~SCPLLStatusAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SCPLLStatus(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SCPLLStatus_allowed(ty);}
};

//	Attribute MCPLLStatus class definition
class MCPLLStatusAttrib: public Tango::Attr
{
public:
	MCPLLStatusAttrib():Attr("MCPLLStatus",
	                   Tango::DEV_BOOLEAN, Tango::READ) {};
	~MCPLLStatusAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_MCPLLStatus(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_MCPLLStatus_allowed(ty);}
};

//	Attribute Temp1 class definition
class Temp1Attrib: public Tango::Attr
{
public:
	Temp1Attrib():Attr("Temp1",
	                   Tango::DEV_SHORT, Tango::READ) {};
	~Temp1Attrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Temp1(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Temp1_allowed(ty);}
};

//	Attribute Temp2 class definition
class Temp2Attrib: public Tango::Attr
{
public:
	Temp2Attrib():Attr("Temp2",
	                   Tango::DEV_SHORT, Tango::READ) {};
	~Temp2Attrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Temp2(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Temp2_allowed(ty);}
};

//	Attribute Temp3 class definition
class Temp3Attrib: public Tango::Attr
{
public:
	Temp3Attrib():Attr("Temp3",
	                   Tango::DEV_SHORT, Tango::READ) {};
	~Temp3Attrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Temp3(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Temp3_allowed(ty);}
};

//	Attribute Fan1Speed class definition
class Fan1SpeedAttrib: public Tango::Attr
{
public:
	Fan1SpeedAttrib():Attr("Fan1Speed",
	                   Tango::DEV_SHORT, Tango::READ) {};
	~Fan1SpeedAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Fan1Speed(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Fan1Speed_allowed(ty);}
};

//	Attribute Fan2Speed class definition
class Fan2SpeedAttrib: public Tango::Attr
{
public:
	Fan2SpeedAttrib():Attr("Fan2Speed",
	                   Tango::DEV_SHORT, Tango::READ) {};
	~Fan2SpeedAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Fan2Speed(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Fan2Speed_allowed(ty);}
};

//	Attribute Incoherence class definition
class IncoherenceAttrib: public Tango::Attr
{
public:
	IncoherenceAttrib():Attr("Incoherence",
	                   Tango::DEV_DOUBLE, Tango::READ) {};
	~IncoherenceAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Incoherence(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Incoherence_allowed(ty);}
};

//	Attribute RefIncoherence class definition
class RefIncoherenceAttrib: public Tango::Attr
{
public:
	RefIncoherenceAttrib():Attr("RefIncoherence",
	                   Tango::DEV_DOUBLE, Tango::READ) {};
	~RefIncoherenceAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_RefIncoherence(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_RefIncoherence_allowed(ty);}
};

//	Attribute MaxIncoherence class definition
class MaxIncoherenceAttrib: public Tango::Attr
{
public:
	MaxIncoherenceAttrib():Attr("MaxIncoherence",
	                   Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~MaxIncoherenceAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_MaxIncoherence(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_MaxIncoherence(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_MaxIncoherence_allowed(ty);}
};

//	Attribute MaxIncoherenceDrift class definition
class MaxIncoherenceDriftAttrib: public Tango::Attr
{
public:
	MaxIncoherenceDriftAttrib():Attr("MaxIncoherenceDrift",
	                   Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~MaxIncoherenceDriftAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_MaxIncoherenceDrift(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_MaxIncoherenceDrift(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_MaxIncoherenceDrift_allowed(ty);}
};

//	Attribute UpTime class definition
class UpTimeAttrib: public Tango::Attr
{
public:
	UpTimeAttrib():Attr("UpTime",
	                   Tango::DEV_LONG, Tango::READ) {};
	~UpTimeAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_UpTime(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_UpTime_allowed(ty);}
};

//	Attribute CpuUsage class definition
class CpuUsageAttrib: public Tango::Attr
{
public:
	CpuUsageAttrib():Attr("CpuUsage",
	                   Tango::DEV_LONG, Tango::READ) {};
	~CpuUsageAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_CpuUsage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_CpuUsage_allowed(ty);}
};

//	Attribute FreeMemory class definition
class FreeMemoryAttrib: public Tango::Attr
{
public:
	FreeMemoryAttrib():Attr("FreeMemory",
	                   Tango::DEV_LONG, Tango::READ) {};
	~FreeMemoryAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_FreeMemory(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_FreeMemory_allowed(ty);}
};

//	Attribute RamFsUsage class definition
class RamFsUsageAttrib: public Tango::Attr
{
public:
	RamFsUsageAttrib():Attr("RamFsUsage",
	                   Tango::DEV_LONG, Tango::READ) {};
	~RamFsUsageAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_RamFsUsage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_RamFsUsage_allowed(ty);}
};

//	Attribute UseLiberaSAData class definition
class UseLiberaSADataAttrib: public Tango::Attr
{
public:
	UseLiberaSADataAttrib():Attr("UseLiberaSAData",
	                   Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~UseLiberaSADataAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_UseLiberaSAData(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_UseLiberaSAData(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_UseLiberaSAData_allowed(ty);}
};

//	Attribute InterlockEnabled class definition
class InterlockEnabledAttrib: public Tango::Attr
{
public:
	InterlockEnabledAttrib():Attr("InterlockEnabled",
	                   Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~InterlockEnabledAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockEnabled_allowed(ty);}
};

//	Attribute InterlockGainDependentEnabled class definition
class InterlockGainDependentEnabledAttrib: public Tango::Attr
{
public:
	InterlockGainDependentEnabledAttrib():Attr("InterlockGainDependentEnabled",
	                   Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~InterlockGainDependentEnabledAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockGainDependentEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockGainDependentEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockGainDependentEnabled_allowed(ty);}
};

//	Attribute InterlockOverflowThreshold class definition
class InterlockOverflowThresholdAttrib: public Tango::Attr
{
public:
	InterlockOverflowThresholdAttrib():Attr("InterlockOverflowThreshold",
	                   Tango::DEV_LONG, Tango::READ_WRITE) {};
	~InterlockOverflowThresholdAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockOverflowThreshold(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockOverflowThreshold(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockOverflowThreshold_allowed(ty);}
};

//	Attribute InterlockOverflowDuration class definition
class InterlockOverflowDurationAttrib: public Tango::Attr
{
public:
	InterlockOverflowDurationAttrib():Attr("InterlockOverflowDuration",
	                   Tango::DEV_LONG, Tango::READ_WRITE) {};
	~InterlockOverflowDurationAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockOverflowDuration(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockOverflowDuration(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockOverflowDuration_allowed(ty);}
};

//	Attribute InterlockGainDependentThreshold class definition
class InterlockGainDependentThresholdAttrib: public Tango::Attr
{
public:
	InterlockGainDependentThresholdAttrib():Attr("InterlockGainDependentThreshold",
	                   Tango::DEV_LONG, Tango::READ_WRITE) {};
	~InterlockGainDependentThresholdAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockGainDependentThreshold(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockGainDependentThreshold(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockGainDependentThreshold_allowed(ty);}
};

//	Attribute Kx class definition
class KxAttrib: public Tango::Attr
{
public:
	KxAttrib():Attr("Kx",
	                   Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~KxAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Kx(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_Kx(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Kx_allowed(ty);}
};

//	Attribute Kz class definition
class KzAttrib: public Tango::Attr
{
public:
	KzAttrib():Attr("Kz",
	                   Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~KzAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Kz(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_Kz(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Kz_allowed(ty);}
};

//	Attribute XOffset class definition
class XOffsetAttrib: public Tango::Attr
{
public:
	XOffsetAttrib():Attr("XOffset",
	                   Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~XOffsetAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XOffset(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_XOffset(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XOffset_allowed(ty);}
};

//	Attribute ZOffset class definition
class ZOffsetAttrib: public Tango::Attr
{
public:
	ZOffsetAttrib():Attr("ZOffset",
	                   Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~ZOffsetAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ZOffset(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_ZOffset(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ZOffset_allowed(ty);}
};

//	Attribute XPosDD class definition
class XPosDDAttrib: public Tango::SpectrumAttr
{
public:
	XPosDDAttrib():SpectrumAttr("XPosDD",
	                   Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~XPosDDAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XPosDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XPosDD_allowed(ty);}
};

//	Attribute ZPosDD class definition
class ZPosDDAttrib: public Tango::SpectrumAttr
{
public:
	ZPosDDAttrib():SpectrumAttr("ZPosDD",
	                   Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~ZPosDDAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ZPosDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ZPosDD_allowed(ty);}
};

//	Attribute QuadDD class definition
class QuadDDAttrib: public Tango::SpectrumAttr
{
public:
	QuadDDAttrib():SpectrumAttr("QuadDD",
	                   Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~QuadDDAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QuadDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QuadDD_allowed(ty);}
};

//	Attribute SumDD class definition
class SumDDAttrib: public Tango::SpectrumAttr
{
public:
	SumDDAttrib():SpectrumAttr("SumDD",
	                   Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~SumDDAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SumDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SumDD_allowed(ty);}
};

//	Attribute VaDD class definition
class VaDDAttrib: public Tango::SpectrumAttr
{
public:
	VaDDAttrib():SpectrumAttr("VaDD",
	                   Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VaDDAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VaDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VaDD_allowed(ty);}
};

//	Attribute VbDD class definition
class VbDDAttrib: public Tango::SpectrumAttr
{
public:
	VbDDAttrib():SpectrumAttr("VbDD",
	                   Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VbDDAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VbDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VbDD_allowed(ty);}
};

//	Attribute VcDD class definition
class VcDDAttrib: public Tango::SpectrumAttr
{
public:
	VcDDAttrib():SpectrumAttr("VcDD",
	                   Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VcDDAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VcDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VcDD_allowed(ty);}
};

//	Attribute VdDD class definition
class VdDDAttrib: public Tango::SpectrumAttr
{
public:
	VdDDAttrib():SpectrumAttr("VdDD",
	                   Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VdDDAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VdDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VdDD_allowed(ty);}
};

//	Attribute XPosSAHistory class definition
class XPosSAHistoryAttrib: public Tango::SpectrumAttr
{
public:
	XPosSAHistoryAttrib():SpectrumAttr("XPosSAHistory",
	                   Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~XPosSAHistoryAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XPosSAHistory(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XPosSAHistory_allowed(ty);}
};

//	Attribute ZPosSAHistory class definition
class ZPosSAHistoryAttrib: public Tango::SpectrumAttr
{
public:
	ZPosSAHistoryAttrib():SpectrumAttr("ZPosSAHistory",
	                   Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~ZPosSAHistoryAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ZPosSAHistory(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ZPosSAHistory_allowed(ty);}
};

//	Attribute SumSAHistory class definition
class SumSAHistoryAttrib: public Tango::SpectrumAttr
{
public:
	SumSAHistoryAttrib():SpectrumAttr("SumSAHistory",
	                   Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~SumSAHistoryAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SumSAHistory(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SumSAHistory_allowed(ty);}
};

//	Attribute XPosPM class definition
class XPosPMAttrib: public Tango::SpectrumAttr
{
public:
	XPosPMAttrib():SpectrumAttr("XPosPM",
	                   Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~XPosPMAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XPosPM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XPosPM_allowed(ty);}
};

//	Attribute ZPosPM class definition
class ZPosPMAttrib: public Tango::SpectrumAttr
{
public:
	ZPosPMAttrib():SpectrumAttr("ZPosPM",
	                   Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~ZPosPMAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ZPosPM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ZPosPM_allowed(ty);}
};

//	Attribute QuadPM class definition
class QuadPMAttrib: public Tango::SpectrumAttr
{
public:
	QuadPMAttrib():SpectrumAttr("QuadPM",
	                   Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~QuadPMAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QuadPM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QuadPM_allowed(ty);}
};

//	Attribute SumPM class definition
class SumPMAttrib: public Tango::SpectrumAttr
{
public:
	SumPMAttrib():SpectrumAttr("SumPM",
	                   Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~SumPMAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SumPM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SumPM_allowed(ty);}
};

//	Attribute VaPM class definition
class VaPMAttrib: public Tango::SpectrumAttr
{
public:
	VaPMAttrib():SpectrumAttr("VaPM",
	                   Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~VaPMAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VaPM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VaPM_allowed(ty);}
};

//	Attribute VbPM class definition
class VbPMAttrib: public Tango::SpectrumAttr
{
public:
	VbPMAttrib():SpectrumAttr("VbPM",
	                   Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~VbPMAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VbPM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VbPM_allowed(ty);}
};

//	Attribute VcPM class definition
class VcPMAttrib: public Tango::SpectrumAttr
{
public:
	VcPMAttrib():SpectrumAttr("VcPM",
	                   Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~VcPMAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VcPM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VcPM_allowed(ty);}
};

//	Attribute VdPM class definition
class VdPMAttrib: public Tango::SpectrumAttr
{
public:
	VdPMAttrib():SpectrumAttr("VdPM",
	                   Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~VdPMAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VdPM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VdPM_allowed(ty);}
};

//	Attribute ADCChannelA class definition
class ADCChannelAAttrib: public Tango::SpectrumAttr
{
public:
	ADCChannelAAttrib():SpectrumAttr("ADCChannelA",
	                   Tango::DEV_SHORT, Tango::READ, 250000) {};
	~ADCChannelAAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ADCChannelA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ADCChannelA_allowed(ty);}
};

//	Attribute ADCChannelB class definition
class ADCChannelBAttrib: public Tango::SpectrumAttr
{
public:
	ADCChannelBAttrib():SpectrumAttr("ADCChannelB",
	                   Tango::DEV_SHORT, Tango::READ, 250000) {};
	~ADCChannelBAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ADCChannelB(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ADCChannelB_allowed(ty);}
};

//	Attribute ADCChannelC class definition
class ADCChannelCAttrib: public Tango::SpectrumAttr
{
public:
	ADCChannelCAttrib():SpectrumAttr("ADCChannelC",
	                   Tango::DEV_SHORT, Tango::READ, 250000) {};
	~ADCChannelCAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ADCChannelC(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ADCChannelC_allowed(ty);}
};

//	Attribute ADCChannelD class definition
class ADCChannelDAttrib: public Tango::SpectrumAttr
{
public:
	ADCChannelDAttrib():SpectrumAttr("ADCChannelD",
	                   Tango::DEV_SHORT, Tango::READ, 250000) {};
	~ADCChannelDAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ADCChannelD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ADCChannelD_allowed(ty);}
};

//	Attribute IaDD class definition
class IaDDAttrib: public Tango::SpectrumAttr
{
public:
	IaDDAttrib():SpectrumAttr("IaDD",
	                   Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~IaDDAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_IaDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_IaDD_allowed(ty);}
};

//	Attribute IbDD class definition
class IbDDAttrib: public Tango::SpectrumAttr
{
public:
	IbDDAttrib():SpectrumAttr("IbDD",
	                   Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~IbDDAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_IbDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_IbDD_allowed(ty);}
};

//	Attribute IcDD class definition
class IcDDAttrib: public Tango::SpectrumAttr
{
public:
	IcDDAttrib():SpectrumAttr("IcDD",
	                   Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~IcDDAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_IcDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_IcDD_allowed(ty);}
};

//	Attribute IdDD class definition
class IdDDAttrib: public Tango::SpectrumAttr
{
public:
	IdDDAttrib():SpectrumAttr("IdDD",
	                   Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~IdDDAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_IdDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_IdDD_allowed(ty);}
};

//	Attribute QaDD class definition
class QaDDAttrib: public Tango::SpectrumAttr
{
public:
	QaDDAttrib():SpectrumAttr("QaDD",
	                   Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~QaDDAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QaDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QaDD_allowed(ty);}
};

//	Attribute QbDD class definition
class QbDDAttrib: public Tango::SpectrumAttr
{
public:
	QbDDAttrib():SpectrumAttr("QbDD",
	                   Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~QbDDAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QbDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QbDD_allowed(ty);}
};

//	Attribute QcDD class definition
class QcDDAttrib: public Tango::SpectrumAttr
{
public:
	QcDDAttrib():SpectrumAttr("QcDD",
	                   Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~QcDDAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QcDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QcDD_allowed(ty);}
};

//	Attribute QdDD class definition
class QdDDAttrib: public Tango::SpectrumAttr
{
public:
	QdDDAttrib():SpectrumAttr("QdDD",
	                   Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~QdDDAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QdDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QdDD_allowed(ty);}
};

//	Attribute UserData class definition
class UserDataAttrib: public Tango::SpectrumAttr
{
public:
	UserDataAttrib():SpectrumAttr("UserData",
	                   Tango::DEV_SHORT, Tango::READ, 256) {};
	~UserDataAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_UserData(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_UserData_allowed(ty);}
};

//	Attribute logs class definition
class logsAttrib: public Tango::SpectrumAttr
{
public:
	logsAttrib():SpectrumAttr("logs",
	                   Tango::DEV_STRING, Tango::READ, 2048) {};
	~logsAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_logs(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_logs_allowed(ty);}
};





//=========================================
//	Define classes for commands
//=========================================
//	Command GetParameters class definition
class GetParametersClass : public Tango::Command
{
public:
	GetParametersClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	GetParametersClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~GetParametersClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_GetParameters_allowed(any);}
};

//	Command UnfreezeDDBuffer class definition
class UnfreezeDDBufferClass : public Tango::Command
{
public:
	UnfreezeDDBufferClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	UnfreezeDDBufferClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~UnfreezeDDBufferClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_UnfreezeDDBuffer_allowed(any);}
};

//	Command EnableDDBufferFreezing class definition
class EnableDDBufferFreezingClass : public Tango::Command
{
public:
	EnableDDBufferFreezingClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	EnableDDBufferFreezingClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~EnableDDBufferFreezingClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_EnableDDBufferFreezing_allowed(any);}
};

//	Command DisableDDBufferFreezing class definition
class DisableDDBufferFreezingClass : public Tango::Command
{
public:
	DisableDDBufferFreezingClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	DisableDDBufferFreezingClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~DisableDDBufferFreezingClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DisableDDBufferFreezing_allowed(any);}
};

//	Command EnableDD class definition
class EnableDDClass : public Tango::Command
{
public:
	EnableDDClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	EnableDDClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~EnableDDClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_EnableDD_allowed(any);}
};

//	Command DisableDD class definition
class DisableDDClass : public Tango::Command
{
public:
	DisableDDClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	DisableDDClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~DisableDDClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DisableDD_allowed(any);}
};

//	Command EnableSA class definition
class EnableSAClass : public Tango::Command
{
public:
	EnableSAClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	EnableSAClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~EnableSAClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_EnableSA_allowed(any);}
};

//	Command DisableSA class definition
class DisableSAClass : public Tango::Command
{
public:
	DisableSAClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	DisableSAClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~DisableSAClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DisableSA_allowed(any);}
};

//	Command ResetPMNotification class definition
class ResetPMNotificationClass : public Tango::Command
{
public:
	ResetPMNotificationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	ResetPMNotificationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~ResetPMNotificationClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ResetPMNotification_allowed(any);}
};

//	Command ResetInterlockNotification class definition
class ResetInterlockNotificationClass : public Tango::Command
{
public:
	ResetInterlockNotificationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	ResetInterlockNotificationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~ResetInterlockNotificationClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ResetInterlockNotification_allowed(any);}
};

//	Command SetInterlockConfiguration class definition
class SetInterlockConfigurationClass : public Tango::Command
{
public:
	SetInterlockConfigurationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetInterlockConfigurationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetInterlockConfigurationClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SetInterlockConfiguration_allowed(any);}
};

//	Command EnableADC class definition
class EnableADCClass : public Tango::Command
{
public:
	EnableADCClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	EnableADCClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~EnableADCClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_EnableADC_allowed(any);}
};

//	Command DisableADC class definition
class DisableADCClass : public Tango::Command
{
public:
	DisableADCClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	DisableADCClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~DisableADCClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DisableADC_allowed(any);}
};

//	Command SetTimeOnNextTrigger class definition
class SetTimeOnNextTriggerClass : public Tango::Command
{
public:
	SetTimeOnNextTriggerClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetTimeOnNextTriggerClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetTimeOnNextTriggerClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SetTimeOnNextTrigger_allowed(any);}
};

//	Command ReadFAData class definition
class ReadFADataClass : public Tango::Command
{
public:
	ReadFADataClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	ReadFADataClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~ReadFADataClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ReadFAData_allowed(any);}
};

//	Command WriteFAData class definition
class WriteFADataClass : public Tango::Command
{
public:
	WriteFADataClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	WriteFADataClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~WriteFADataClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_WriteFAData_allowed(any);}
};

//	Command SaveDSCParameters class definition
class SaveDSCParametersClass : public Tango::Command
{
public:
	SaveDSCParametersClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SaveDSCParametersClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SaveDSCParametersClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SaveDSCParameters_allowed(any);}
};

//	Command ReloadSystemProperties class definition
class ReloadSystemPropertiesClass : public Tango::Command
{
public:
	ReloadSystemPropertiesClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	ReloadSystemPropertiesClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~ReloadSystemPropertiesClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ReloadSystemProperties_allowed(any);}
};

//	Command SetRefIncoherence class definition
class SetRefIncoherenceClass : public Tango::Command
{
public:
	SetRefIncoherenceClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetRefIncoherenceClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetRefIncoherenceClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SetRefIncoherence_allowed(any);}
};

//	Command MagicCommand class definition
class MagicCommandClass : public Tango::Command
{
public:
	MagicCommandClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	MagicCommandClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~MagicCommandClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_MagicCommand_allowed(any);}
};





/**
 *	The TemplateDevServClass singleton definition
 */

class
#ifdef _TG_WINDOWS_
	__declspec(dllexport)
#endif
	LiberaBrilliancePlusClass : public Tango::DeviceClass
{
	/*----- PROTECTED REGION ID(LiberaBrilliancePlus::Additionnal DServer data members) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	LiberaBrilliancePlus::Additionnal DServer data members




//	Class properties data members
public:
	//	InterlockConfiguration:	The user defined interlock configuration. This is the configuration that should be applied on the Libera in case the device `finds`
	 //	the Libera in its default startup configuration when it is itself starting up or executing its Init TANGO command. This configuration
	 //	can also be applied using the dedicated ``SetInterlockConfiguration`` expert command.
	 //	Parameters mapping:
	 //	[0] Interlock : mode - [0]: disabled, [1]: enabled, [3]: enabled with gain dependency
	 //	[1] Interlock : threshold : X low in mm
	 //	[2] Interlock : threshold : X high in mm
	 //	[3] Interlock : threshold : Z low in mm (i.e. Y low in the Libera terminology)
	 //	[4] Interlock : threshold : Z high in mm (i.e. Y high in the Libera terminology)
	 //	[5] Interlock : overflow limit (ADC threshold)
	 //	[6] Interlock : overflow duration (num of overloaded ADC samples before raising intlck)
	 //	[7] Interlock : gain limit in dBm  (intlck not active under this limit) - valid range is [-60, 0]
	vector<Tango::DevDouble>	interlockConfiguration;
	//	EnableDDOptionalData:	Enables/Disables  DD optional data (IxDD and QxDD)
	Tango::DevBoolean	enableDDOptionalData;
	//	EnableSAOptionalData:	Enables/disables SA optional Data (currently not used)
	Tango::DevBoolean	enableSAOptionalData;
	//	EnableSAHistoryOptionalData:	Enables/disables SA History optional data (sum history)
	Tango::DevBoolean	enableSAHistoryOptionalData;
	//	EnableADCOptionalData:	Enables/disables ADC optional data (currently not used)
	Tango::DevBoolean	enableADCOptionalData;
	//	Institute:	0: TANGO_INSTITUTE (GENERIC)
	 //	1: ALBA
	 //	2: ESRF
	 //	3: ELETTRA
	 //	4: SOLEIL
	Tango::DevShort	institute;
public:
//	write class properties data members
	Tango::DbData	cl_prop;
	Tango::DbData	cl_def_prop;
	Tango::DbData	dev_def_prop;

//	Method prototypes
	static LiberaBrilliancePlusClass *init(const char *);
	static LiberaBrilliancePlusClass *instance();
	~LiberaBrilliancePlusClass();
	Tango::DbDatum	get_class_property(string &);
	Tango::DbDatum	get_default_device_property(string &);
	Tango::DbDatum	get_default_class_property(string &);
	
protected:
	LiberaBrilliancePlusClass(string &);
	static LiberaBrilliancePlusClass *_instance;
	void command_factory();
	void attribute_factory(vector<Tango::Attr *> &);
	void write_class_property();
	void set_default_property();
	void get_class_property();
	string get_cvstag();
	string get_cvsroot();

private:
	void device_factory(const Tango::DevVarStringArray *);
	void create_static_attribute_list(vector<Tango::Attr *> &);
	void erase_dynamic_attributes(const Tango::DevVarStringArray *,vector<Tango::Attr *> &);
	vector<string>	defaultAttList;


};

}	//	namespace

#endif	//	LIBERABRILLIANCEPLUSCLASS_H

