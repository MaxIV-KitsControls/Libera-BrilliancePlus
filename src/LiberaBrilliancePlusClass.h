/*----- PROTECTED REGION ID(LiberaBrilliancePlusClass.h) ENABLED START -----*/
//=============================================================================
//
// file :        LiberaBrilliancePlusClass.h
//
// description : Include for the LiberaBrilliancePlus root class.
//               This class is the singleton class for
//                the LiberaBrilliancePlus device class.
//               It contains all properties and methods which the 
//               LiberaBrilliancePlus requires only once e.g. the commands.
//
// project :     Libera BPM Device Server
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#ifndef LiberaBrilliancePlusClass_H
#define LiberaBrilliancePlusClass_H

#include <tango.h>
#include <LiberaBrilliancePlus.h>


/*----- PROTECTED REGION END -----*/	//	LiberaBrilliancePlusClass.h


namespace LiberaBrilliancePlus_ns
{
/*----- PROTECTED REGION ID(LiberaBrilliancePlusClass::classes for dynamic creation) ENABLED START -----*/


/*----- PROTECTED REGION END -----*/	//	LiberaBrilliancePlusClass::classes for dynamic creation

//=========================================
//	Define classes for attributes
//=========================================
//	Attribute DDEnabled class definition
class DDEnabledAttrib: public Tango::Attr
{
public:
	DDEnabledAttrib():Attr("DDEnabled",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~DDEnabledAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_DDEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_DDEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DDEnabled_allowed(ty);}
};

//	Attribute DDBufferSize class definition
class DDBufferSizeAttrib: public Tango::Attr
{
public:
	DDBufferSizeAttrib():Attr("DDBufferSize",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~DDBufferSizeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_DDBufferSize(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_DDBufferSize(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DDBufferSize_allowed(ty);}
};

//	Attribute DDDecimationFactor class definition
class DDDecimationFactorAttrib: public Tango::Attr
{
public:
	DDDecimationFactorAttrib():Attr("DDDecimationFactor",
			Tango::DEV_USHORT, Tango::READ_WRITE) {};
	~DDDecimationFactorAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_DDDecimationFactor(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_DDDecimationFactor(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DDDecimationFactor_allowed(ty);}
};

//	Attribute DDTriggerOffset class definition
class DDTriggerOffsetAttrib: public Tango::Attr
{
public:
	DDTriggerOffsetAttrib():Attr("DDTriggerOffset",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~DDTriggerOffsetAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_DDTriggerOffset(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_DDTriggerOffset(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DDTriggerOffset_allowed(ty);}
};

//	Attribute DDBufferFreezingEnabled class definition
class DDBufferFreezingEnabledAttrib: public Tango::Attr
{
public:
	DDBufferFreezingEnabledAttrib():Attr("DDBufferFreezingEnabled",
			Tango::DEV_BOOLEAN, Tango::READ) {};
	~DDBufferFreezingEnabledAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_DDBufferFreezingEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DDBufferFreezingEnabled_allowed(ty);}
};

//	Attribute DDBufferFrozen class definition
class DDBufferFrozenAttrib: public Tango::Attr
{
public:
	DDBufferFrozenAttrib():Attr("DDBufferFrozen",
			Tango::DEV_BOOLEAN, Tango::READ) {};
	~DDBufferFrozenAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_DDBufferFrozen(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DDBufferFrozen_allowed(ty);}
};

//	Attribute ExternalTriggerDelay class definition
class ExternalTriggerDelayAttrib: public Tango::Attr
{
public:
	ExternalTriggerDelayAttrib():Attr("ExternalTriggerDelay",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~ExternalTriggerDelayAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ExternalTriggerDelay(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_ExternalTriggerDelay(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ExternalTriggerDelay_allowed(ty);}
};

//	Attribute SAEnabled class definition
class SAEnabledAttrib: public Tango::Attr
{
public:
	SAEnabledAttrib():Attr("SAEnabled",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~SAEnabledAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SAEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SAEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SAEnabled_allowed(ty);}
};

//	Attribute VaSA class definition
class VaSAAttrib: public Tango::Attr
{
public:
	VaSAAttrib():Attr("VaSA",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~VaSAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VaSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VaSA_allowed(ty);}
};

//	Attribute VbSA class definition
class VbSAAttrib: public Tango::Attr
{
public:
	VbSAAttrib():Attr("VbSA",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~VbSAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VbSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VbSA_allowed(ty);}
};

//	Attribute VcSA class definition
class VcSAAttrib: public Tango::Attr
{
public:
	VcSAAttrib():Attr("VcSA",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~VcSAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VcSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VcSA_allowed(ty);}
};

//	Attribute VdSA class definition
class VdSAAttrib: public Tango::Attr
{
public:
	VdSAAttrib():Attr("VdSA",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~VdSAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VdSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VdSA_allowed(ty);}
};

//	Attribute XPosSA class definition
class XPosSAAttrib: public Tango::Attr
{
public:
	XPosSAAttrib():Attr("XPosSA",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~XPosSAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XPosSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XPosSA_allowed(ty);}
};

//	Attribute YPosSA class definition
class YPosSAAttrib: public Tango::Attr
{
public:
	YPosSAAttrib():Attr("YPosSA",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~YPosSAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_YPosSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_YPosSA_allowed(ty);}
};

//	Attribute SumSA class definition
class SumSAAttrib: public Tango::Attr
{
public:
	SumSAAttrib():Attr("SumSA",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~SumSAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SumSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SumSA_allowed(ty);}
};

//	Attribute QuadSA class definition
class QuadSAAttrib: public Tango::Attr
{
public:
	QuadSAAttrib():Attr("QuadSA",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~QuadSAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QuadSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QuadSA_allowed(ty);}
};

//	Attribute SAStatNumSamples class definition
class SAStatNumSamplesAttrib: public Tango::Attr
{
public:
	SAStatNumSamplesAttrib():Attr("SAStatNumSamples",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~SAStatNumSamplesAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SAStatNumSamples(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SAStatNumSamples(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SAStatNumSamples_allowed(ty);}
};

//	Attribute XMeanPosSA class definition
class XMeanPosSAAttrib: public Tango::Attr
{
public:
	XMeanPosSAAttrib():Attr("XMeanPosSA",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~XMeanPosSAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XMeanPosSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XMeanPosSA_allowed(ty);}
};

//	Attribute YMeanPosSA class definition
class YMeanPosSAAttrib: public Tango::Attr
{
public:
	YMeanPosSAAttrib():Attr("YMeanPosSA",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~YMeanPosSAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_YMeanPosSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_YMeanPosSA_allowed(ty);}
};

//	Attribute XRMSPosSA class definition
class XRMSPosSAAttrib: public Tango::Attr
{
public:
	XRMSPosSAAttrib():Attr("XRMSPosSA",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~XRMSPosSAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XRMSPosSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XRMSPosSA_allowed(ty);}
};

//	Attribute YRMSPosSA class definition
class YRMSPosSAAttrib: public Tango::Attr
{
public:
	YRMSPosSAAttrib():Attr("YRMSPosSA",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~YRMSPosSAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_YRMSPosSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_YRMSPosSA_allowed(ty);}
};

//	Attribute XPeakPosSA class definition
class XPeakPosSAAttrib: public Tango::Attr
{
public:
	XPeakPosSAAttrib():Attr("XPeakPosSA",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~XPeakPosSAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XPeakPosSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XPeakPosSA_allowed(ty);}
};

//	Attribute YPeakPosSA class definition
class YPeakPosSAAttrib: public Tango::Attr
{
public:
	YPeakPosSAAttrib():Attr("YPeakPosSA",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~YPeakPosSAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_YPeakPosSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_YPeakPosSA_allowed(ty);}
};

//	Attribute SumMeanSA class definition
class SumMeanSAAttrib: public Tango::Attr
{
public:
	SumMeanSAAttrib():Attr("SumMeanSA",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~SumMeanSAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SumMeanSA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SumMeanSA_allowed(ty);}
};

//	Attribute ADCEnabled class definition
class ADCEnabledAttrib: public Tango::Attr
{
public:
	ADCEnabledAttrib():Attr("ADCEnabled",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~ADCEnabledAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ADCEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_ADCEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ADCEnabled_allowed(ty);}
};

//	Attribute ADCBufferSize class definition
class ADCBufferSizeAttrib: public Tango::Attr
{
public:
	ADCBufferSizeAttrib():Attr("ADCBufferSize",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~ADCBufferSizeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ADCBufferSize(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_ADCBufferSize(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ADCBufferSize_allowed(ty);}
};

//	Attribute PMOffset class definition
class PMOffsetAttrib: public Tango::Attr
{
public:
	PMOffsetAttrib():Attr("PMOffset",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~PMOffsetAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_PMOffset(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_PMOffset(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_PMOffset_allowed(ty);}
};

//	Attribute PMNotified class definition
class PMNotifiedAttrib: public Tango::Attr
{
public:
	PMNotifiedAttrib():Attr("PMNotified",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~PMNotifiedAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_PMNotified(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_PMNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_PMNotified_allowed(ty);}
};

//	Attribute InterlockXNotified class definition
class InterlockXNotifiedAttrib: public Tango::Attr
{
public:
	InterlockXNotifiedAttrib():Attr("InterlockXNotified",
			Tango::DEV_BOOLEAN, Tango::READ) {};
	~InterlockXNotifiedAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockXNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockXNotified_allowed(ty);}
};

//	Attribute InterlockYNotified class definition
class InterlockYNotifiedAttrib: public Tango::Attr
{
public:
	InterlockYNotifiedAttrib():Attr("InterlockYNotified",
			Tango::DEV_BOOLEAN, Tango::READ) {};
	~InterlockYNotifiedAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockYNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockYNotified_allowed(ty);}
};

//	Attribute InterlockAttnNotified class definition
class InterlockAttnNotifiedAttrib: public Tango::Attr
{
public:
	InterlockAttnNotifiedAttrib():Attr("InterlockAttnNotified",
			Tango::DEV_BOOLEAN, Tango::READ) {};
	~InterlockAttnNotifiedAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockAttnNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockAttnNotified_allowed(ty);}
};

//	Attribute InterlockADCPreFilterNotified class definition
class InterlockADCPreFilterNotifiedAttrib: public Tango::Attr
{
public:
	InterlockADCPreFilterNotifiedAttrib():Attr("InterlockADCPreFilterNotified",
			Tango::DEV_BOOLEAN, Tango::READ) {};
	~InterlockADCPreFilterNotifiedAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockADCPreFilterNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockADCPreFilterNotified_allowed(ty);}
};

//	Attribute InterlockADCPostFilterNotified class definition
class InterlockADCPostFilterNotifiedAttrib: public Tango::Attr
{
public:
	InterlockADCPostFilterNotifiedAttrib():Attr("InterlockADCPostFilterNotified",
			Tango::DEV_BOOLEAN, Tango::READ) {};
	~InterlockADCPostFilterNotifiedAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockADCPostFilterNotified(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockADCPostFilterNotified_allowed(ty);}
};

//	Attribute InterlockLimitXMin class definition
class InterlockLimitXMinAttrib: public Tango::Attr
{
public:
	InterlockLimitXMinAttrib():Attr("InterlockLimitXMin",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~InterlockLimitXMinAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockLimitXMin(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockLimitXMin(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockLimitXMin_allowed(ty);}
};

//	Attribute InterlockLimitXMax class definition
class InterlockLimitXMaxAttrib: public Tango::Attr
{
public:
	InterlockLimitXMaxAttrib():Attr("InterlockLimitXMax",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~InterlockLimitXMaxAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockLimitXMax(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockLimitXMax(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockLimitXMax_allowed(ty);}
};

//	Attribute InterlockLimitYMin class definition
class InterlockLimitYMinAttrib: public Tango::Attr
{
public:
	InterlockLimitYMinAttrib():Attr("InterlockLimitYMin",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~InterlockLimitYMinAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockLimitYMin(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockLimitYMin(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockLimitYMin_allowed(ty);}
};

//	Attribute InterlockLimitYMax class definition
class InterlockLimitYMaxAttrib: public Tango::Attr
{
public:
	InterlockLimitYMaxAttrib():Attr("InterlockLimitYMax",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~InterlockLimitYMaxAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockLimitYMax(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockLimitYMax(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockLimitYMax_allowed(ty);}
};

//	Attribute AutoSwitchingEnabled class definition
class AutoSwitchingEnabledAttrib: public Tango::Attr
{
public:
	AutoSwitchingEnabledAttrib():Attr("AutoSwitchingEnabled",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~AutoSwitchingEnabledAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_AutoSwitchingEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_AutoSwitchingEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_AutoSwitchingEnabled_allowed(ty);}
};

//	Attribute ExternalSwitching class definition
class ExternalSwitchingAttrib: public Tango::Attr
{
public:
	ExternalSwitchingAttrib():Attr("ExternalSwitching",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~ExternalSwitchingAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ExternalSwitching(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_ExternalSwitching(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ExternalSwitching_allowed(ty);}
};

//	Attribute SwitchingDelay class definition
class SwitchingDelayAttrib: public Tango::Attr
{
public:
	SwitchingDelayAttrib():Attr("SwitchingDelay",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~SwitchingDelayAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SwitchingDelay(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SwitchingDelay(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SwitchingDelay_allowed(ty);}
};

//	Attribute DSCMode class definition
class DSCModeAttrib: public Tango::Attr
{
public:
	DSCModeAttrib():Attr("DSCMode",
			Tango::DEV_SHORT, Tango::READ_WRITE) {};
	~DSCModeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_DSCMode(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_DSCMode(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DSCMode_allowed(ty);}
};

//	Attribute AGCEnabled class definition
class AGCEnabledAttrib: public Tango::Attr
{
public:
	AGCEnabledAttrib():Attr("AGCEnabled",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~AGCEnabledAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_AGCEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_AGCEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_AGCEnabled_allowed(ty);}
};

//	Attribute Gain class definition
class GainAttrib: public Tango::Attr
{
public:
	GainAttrib():Attr("Gain",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~GainAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Gain(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_Gain(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Gain_allowed(ty);}
};

//	Attribute TimePhase class definition
class TimePhaseAttrib: public Tango::Attr
{
public:
	TimePhaseAttrib():Attr("TimePhase",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~TimePhaseAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_TimePhase(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_TimePhase(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_TimePhase_allowed(ty);}
};

//	Attribute Temp1 class definition
class Temp1Attrib: public Tango::Attr
{
public:
	Temp1Attrib():Attr("Temp1",
			Tango::DEV_SHORT, Tango::READ) {};
	~Temp1Attrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Temp1(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Temp1_allowed(ty);}
};

//	Attribute Temp2 class definition
class Temp2Attrib: public Tango::Attr
{
public:
	Temp2Attrib():Attr("Temp2",
			Tango::DEV_SHORT, Tango::READ) {};
	~Temp2Attrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Temp2(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Temp2_allowed(ty);}
};

//	Attribute Fan1Speed class definition
class Fan1SpeedAttrib: public Tango::Attr
{
public:
	Fan1SpeedAttrib():Attr("Fan1Speed",
			Tango::DEV_SHORT, Tango::READ) {};
	~Fan1SpeedAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Fan1Speed(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Fan1Speed_allowed(ty);}
};

//	Attribute Fan2Speed class definition
class Fan2SpeedAttrib: public Tango::Attr
{
public:
	Fan2SpeedAttrib():Attr("Fan2Speed",
			Tango::DEV_SHORT, Tango::READ) {};
	~Fan2SpeedAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Fan2Speed(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Fan2Speed_allowed(ty);}
};

//	Attribute CpuUsage class definition
class CpuUsageAttrib: public Tango::Attr
{
public:
	CpuUsageAttrib():Attr("CpuUsage",
			Tango::DEV_LONG, Tango::READ) {};
	~CpuUsageAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_CpuUsage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_CpuUsage_allowed(ty);}
};

//	Attribute FreeMemory class definition
class FreeMemoryAttrib: public Tango::Attr
{
public:
	FreeMemoryAttrib():Attr("FreeMemory",
			Tango::DEV_LONG, Tango::READ) {};
	~FreeMemoryAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_FreeMemory(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_FreeMemory_allowed(ty);}
};

//	Attribute InterlockEnabled class definition
class InterlockEnabledAttrib: public Tango::Attr
{
public:
	InterlockEnabledAttrib():Attr("InterlockEnabled",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~InterlockEnabledAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockEnabled_allowed(ty);}
};

//	Attribute InterlockGainDependentEnabled class definition
class InterlockGainDependentEnabledAttrib: public Tango::Attr
{
public:
	InterlockGainDependentEnabledAttrib():Attr("InterlockGainDependentEnabled",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~InterlockGainDependentEnabledAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockGainDependentEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockGainDependentEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockGainDependentEnabled_allowed(ty);}
};

//	Attribute InterlockOverflowThreshold class definition
class InterlockOverflowThresholdAttrib: public Tango::Attr
{
public:
	InterlockOverflowThresholdAttrib():Attr("InterlockOverflowThreshold",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~InterlockOverflowThresholdAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockOverflowThreshold(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockOverflowThreshold(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockOverflowThreshold_allowed(ty);}
};

//	Attribute InterlockOverflowDuration class definition
class InterlockOverflowDurationAttrib: public Tango::Attr
{
public:
	InterlockOverflowDurationAttrib():Attr("InterlockOverflowDuration",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~InterlockOverflowDurationAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockOverflowDuration(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockOverflowDuration(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockOverflowDuration_allowed(ty);}
};

//	Attribute InterlockGainDependentThreshold class definition
class InterlockGainDependentThresholdAttrib: public Tango::Attr
{
public:
	InterlockGainDependentThresholdAttrib():Attr("InterlockGainDependentThreshold",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~InterlockGainDependentThresholdAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockGainDependentThreshold(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockGainDependentThreshold(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockGainDependentThreshold_allowed(ty);}
};

//	Attribute Kx class definition
class KxAttrib: public Tango::Attr
{
public:
	KxAttrib():Attr("Kx",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~KxAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Kx(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_Kx(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Kx_allowed(ty);}
};

//	Attribute Ky class definition
class KyAttrib: public Tango::Attr
{
public:
	KyAttrib():Attr("Ky",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~KyAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Ky(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_Ky(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Ky_allowed(ty);}
};

//	Attribute XOffset class definition
class XOffsetAttrib: public Tango::Attr
{
public:
	XOffsetAttrib():Attr("XOffset",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~XOffsetAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XOffset(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_XOffset(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XOffset_allowed(ty);}
};

//	Attribute YOffset class definition
class YOffsetAttrib: public Tango::Attr
{
public:
	YOffsetAttrib():Attr("YOffset",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~YOffsetAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_YOffset(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_YOffset(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_YOffset_allowed(ty);}
};

//	Attribute TDEnabled class definition
class TDEnabledAttrib: public Tango::Attr
{
public:
	TDEnabledAttrib():Attr("TDEnabled",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~TDEnabledAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_TDEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_TDEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_TDEnabled_allowed(ty);}
};

//	Attribute TDBufferSize class definition
class TDBufferSizeAttrib: public Tango::Attr
{
public:
	TDBufferSizeAttrib():Attr("TDBufferSize",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~TDBufferSizeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_TDBufferSize(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_TDBufferSize(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_TDBufferSize_allowed(ty);}
};

//	Attribute TDDecimationFactor class definition
class TDDecimationFactorAttrib: public Tango::Attr
{
public:
	TDDecimationFactorAttrib():Attr("TDDecimationFactor",
			Tango::DEV_USHORT, Tango::READ_WRITE) {};
	~TDDecimationFactorAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_TDDecimationFactor(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_TDDecimationFactor(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_TDDecimationFactor_allowed(ty);}
};

//	Attribute TDTriggerOffset class definition
class TDTriggerOffsetAttrib: public Tango::Attr
{
public:
	TDTriggerOffsetAttrib():Attr("TDTriggerOffset",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~TDTriggerOffsetAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_TDTriggerOffset(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_TDTriggerOffset(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_TDTriggerOffset_allowed(ty);}
};

//	Attribute TDBufferFreezingEnabled class definition
class TDBufferFreezingEnabledAttrib: public Tango::Attr
{
public:
	TDBufferFreezingEnabledAttrib():Attr("TDBufferFreezingEnabled",
			Tango::DEV_BOOLEAN, Tango::READ) {};
	~TDBufferFreezingEnabledAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_TDBufferFreezingEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_TDBufferFreezingEnabled_allowed(ty);}
};

//	Attribute TDBufferFrozen class definition
class TDBufferFrozenAttrib: public Tango::Attr
{
public:
	TDBufferFrozenAttrib():Attr("TDBufferFrozen",
			Tango::DEV_BOOLEAN, Tango::READ) {};
	~TDBufferFrozenAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_TDBufferFrozen(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_TDBufferFrozen_allowed(ty);}
};

//	Attribute TDTriggerCounter class definition
class TDTriggerCounterAttrib: public Tango::Attr
{
public:
	TDTriggerCounterAttrib():Attr("TDTriggerCounter",
			Tango::DEV_LONG, Tango::READ) {};
	~TDTriggerCounterAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_TDTriggerCounter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_TDTriggerCounter_allowed(ty);}
};

//	Attribute Ks class definition
class KsAttrib: public Tango::Attr
{
public:
	KsAttrib():Attr("Ks",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~KsAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_Ks(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_Ks(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_Ks_allowed(ty);}
};

//	Attribute QOffset class definition
class QOffsetAttrib: public Tango::Attr
{
public:
	QOffsetAttrib():Attr("QOffset",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~QOffsetAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QOffset(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_QOffset(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QOffset_allowed(ty);}
};

//	Attribute SOffset class definition
class SOffsetAttrib: public Tango::Attr
{
public:
	SOffsetAttrib():Attr("SOffset",
			Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~SOffsetAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SOffset(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SOffset(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SOffset_allowed(ty);}
};

//	Attribute SynchronizationStatus class definition
class SynchronizationStatusAttrib: public Tango::Attr
{
public:
	SynchronizationStatusAttrib():Attr("SynchronizationStatus",
			Tango::DEV_SHORT, Tango::READ) {};
	~SynchronizationStatusAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SynchronizationStatus(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SynchronizationStatus_allowed(ty);}
};

//	Attribute MaxADC class definition
class MaxADCAttrib: public Tango::Attr
{
public:
	MaxADCAttrib():Attr("MaxADC",
			Tango::DEV_LONG, Tango::READ) {};
	~MaxADCAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_MaxADC(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_MaxADC_allowed(ty);}
};

//	Attribute SPThreshold class definition
class SPThresholdAttrib: public Tango::Attr
{
public:
	SPThresholdAttrib():Attr("SPThreshold",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~SPThresholdAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SPThreshold(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SPThreshold(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SPThreshold_allowed(ty);}
};

//	Attribute SPnBefore class definition
class SPnBeforeAttrib: public Tango::Attr
{
public:
	SPnBeforeAttrib():Attr("SPnBefore",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~SPnBeforeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SPnBefore(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SPnBefore(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SPnBefore_allowed(ty);}
};

//	Attribute SPnAfter class definition
class SPnAfterAttrib: public Tango::Attr
{
public:
	SPnAfterAttrib():Attr("SPnAfter",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~SPnAfterAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SPnAfter(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SPnAfter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SPnAfter_allowed(ty);}
};

//	Attribute SPEnabled class definition
class SPEnabledAttrib: public Tango::Attr
{
public:
	SPEnabledAttrib():Attr("SPEnabled",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~SPEnabledAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SPEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SPEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SPEnabled_allowed(ty);}
};

//	Attribute SPBufferSize class definition
class SPBufferSizeAttrib: public Tango::Attr
{
public:
	SPBufferSizeAttrib():Attr("SPBufferSize",
			Tango::DEV_LONG, Tango::READ) {};
	~SPBufferSizeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SPBufferSize(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SPBufferSize_allowed(ty);}
};

//	Attribute PMBufferSize class definition
class PMBufferSizeAttrib: public Tango::Attr
{
public:
	PMBufferSizeAttrib():Attr("PMBufferSize",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~PMBufferSizeAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_PMBufferSize(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_PMBufferSize(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_PMBufferSize_allowed(ty);}
};

//	Attribute PMSource class definition
class PMSourceAttrib: public Tango::Attr
{
public:
	PMSourceAttrib():Attr("PMSource",
			Tango::DEV_SHORT, Tango::READ_WRITE) {};
	~PMSourceAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_PMSource(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_PMSource(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_PMSource_allowed(ty);}
};

//	Attribute SynchronizeLMT class definition
class SynchronizeLMTAttrib: public Tango::Attr
{
public:
	SynchronizeLMTAttrib():Attr("SynchronizeLMT",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~SynchronizeLMTAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SynchronizeLMT(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_SynchronizeLMT(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SynchronizeLMT_allowed(ty);}
};

//	Attribute InterlockFilterOverflow class definition
class InterlockFilterOverflowAttrib: public Tango::Attr
{
public:
	InterlockFilterOverflowAttrib():Attr("InterlockFilterOverflow",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~InterlockFilterOverflowAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockFilterOverflow(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockFilterOverflow(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockFilterOverflow_allowed(ty);}
};

//	Attribute InterlockFilterPosition class definition
class InterlockFilterPositionAttrib: public Tango::Attr
{
public:
	InterlockFilterPositionAttrib():Attr("InterlockFilterPosition",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~InterlockFilterPositionAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_InterlockFilterPosition(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_InterlockFilterPosition(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_InterlockFilterPosition_allowed(ty);}
};

//	Attribute SumSP class definition
class SumSPAttrib: public Tango::Attr
{
public:
	SumSPAttrib():Attr("SumSP",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~SumSPAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SumSP(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SumSP_allowed(ty);}
};

//	Attribute VbSP class definition
class VbSPAttrib: public Tango::Attr
{
public:
	VbSPAttrib():Attr("VbSP",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~VbSPAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VbSP(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VbSP_allowed(ty);}
};

//	Attribute VcSP class definition
class VcSPAttrib: public Tango::Attr
{
public:
	VcSPAttrib():Attr("VcSP",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~VcSPAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VcSP(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VcSP_allowed(ty);}
};

//	Attribute VdSP class definition
class VdSPAttrib: public Tango::Attr
{
public:
	VdSPAttrib():Attr("VdSP",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~VdSPAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VdSP(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VdSP_allowed(ty);}
};

//	Attribute XPosSP class definition
class XPosSPAttrib: public Tango::Attr
{
public:
	XPosSPAttrib():Attr("XPosSP",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~XPosSPAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XPosSP(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XPosSP_allowed(ty);}
};

//	Attribute YPosSP class definition
class YPosSPAttrib: public Tango::Attr
{
public:
	YPosSPAttrib():Attr("YPosSP",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~YPosSPAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_YPosSP(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_YPosSP_allowed(ty);}
};

//	Attribute ThdrId class definition
class ThdrIdAttrib: public Tango::Attr
{
public:
	ThdrIdAttrib():Attr("ThdrId",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~ThdrIdAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ThdrId(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ThdrId_allowed(ty);}
};

//	Attribute VaSP class definition
class VaSPAttrib: public Tango::Attr
{
public:
	VaSPAttrib():Attr("VaSP",
			Tango::DEV_DOUBLE, Tango::READ) {};
	~VaSPAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VaSP(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VaSP_allowed(ty);}
};

//	Attribute FAEnabled class definition
class FAEnabledAttrib: public Tango::Attr
{
public:
	FAEnabledAttrib():Attr("FAEnabled",
			Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~FAEnabledAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_FAEnabled(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_FAEnabled(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_FAEnabled_allowed(ty);}
};

//	Attribute FAStatNumSamples class definition
class FAStatNumSamplesAttrib: public Tango::Attr
{
public:
	FAStatNumSamplesAttrib():Attr("FAStatNumSamples",
			Tango::DEV_LONG, Tango::READ_WRITE) {};
	~FAStatNumSamplesAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_FAStatNumSamples(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->write_FAStatNumSamples(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_FAStatNumSamples_allowed(ty);}
};

//	Attribute XPosDD class definition
class XPosDDAttrib: public Tango::SpectrumAttr
{
public:
	XPosDDAttrib():SpectrumAttr("XPosDD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~XPosDDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XPosDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XPosDD_allowed(ty);}
};

//	Attribute YPosDD class definition
class YPosDDAttrib: public Tango::SpectrumAttr
{
public:
	YPosDDAttrib():SpectrumAttr("YPosDD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~YPosDDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_YPosDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_YPosDD_allowed(ty);}
};

//	Attribute QuadDD class definition
class QuadDDAttrib: public Tango::SpectrumAttr
{
public:
	QuadDDAttrib():SpectrumAttr("QuadDD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~QuadDDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QuadDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QuadDD_allowed(ty);}
};

//	Attribute SumDD class definition
class SumDDAttrib: public Tango::SpectrumAttr
{
public:
	SumDDAttrib():SpectrumAttr("SumDD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~SumDDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SumDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SumDD_allowed(ty);}
};

//	Attribute VaDD class definition
class VaDDAttrib: public Tango::SpectrumAttr
{
public:
	VaDDAttrib():SpectrumAttr("VaDD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VaDDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VaDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VaDD_allowed(ty);}
};

//	Attribute VbDD class definition
class VbDDAttrib: public Tango::SpectrumAttr
{
public:
	VbDDAttrib():SpectrumAttr("VbDD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VbDDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VbDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VbDD_allowed(ty);}
};

//	Attribute VcDD class definition
class VcDDAttrib: public Tango::SpectrumAttr
{
public:
	VcDDAttrib():SpectrumAttr("VcDD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VcDDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VcDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VcDD_allowed(ty);}
};

//	Attribute VdDD class definition
class VdDDAttrib: public Tango::SpectrumAttr
{
public:
	VdDDAttrib():SpectrumAttr("VdDD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VdDDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VdDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VdDD_allowed(ty);}
};

//	Attribute XPosSAHistory class definition
class XPosSAHistoryAttrib: public Tango::SpectrumAttr
{
public:
	XPosSAHistoryAttrib():SpectrumAttr("XPosSAHistory",
			Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~XPosSAHistoryAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XPosSAHistory(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XPosSAHistory_allowed(ty);}
};

//	Attribute YPosSAHistory class definition
class YPosSAHistoryAttrib: public Tango::SpectrumAttr
{
public:
	YPosSAHistoryAttrib():SpectrumAttr("YPosSAHistory",
			Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~YPosSAHistoryAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_YPosSAHistory(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_YPosSAHistory_allowed(ty);}
};

//	Attribute SumSAHistory class definition
class SumSAHistoryAttrib: public Tango::SpectrumAttr
{
public:
	SumSAHistoryAttrib():SpectrumAttr("SumSAHistory",
			Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~SumSAHistoryAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SumSAHistory(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SumSAHistory_allowed(ty);}
};

//	Attribute XPosPM class definition
class XPosPMAttrib: public Tango::SpectrumAttr
{
public:
	XPosPMAttrib():SpectrumAttr("XPosPM",
			Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~XPosPMAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XPosPM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XPosPM_allowed(ty);}
};

//	Attribute YPosPM class definition
class YPosPMAttrib: public Tango::SpectrumAttr
{
public:
	YPosPMAttrib():SpectrumAttr("YPosPM",
			Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~YPosPMAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_YPosPM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_YPosPM_allowed(ty);}
};

//	Attribute QuadPM class definition
class QuadPMAttrib: public Tango::SpectrumAttr
{
public:
	QuadPMAttrib():SpectrumAttr("QuadPM",
			Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~QuadPMAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QuadPM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QuadPM_allowed(ty);}
};

//	Attribute SumPM class definition
class SumPMAttrib: public Tango::SpectrumAttr
{
public:
	SumPMAttrib():SpectrumAttr("SumPM",
			Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~SumPMAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SumPM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SumPM_allowed(ty);}
};

//	Attribute VaPM class definition
class VaPMAttrib: public Tango::SpectrumAttr
{
public:
	VaPMAttrib():SpectrumAttr("VaPM",
			Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~VaPMAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VaPM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VaPM_allowed(ty);}
};

//	Attribute VbPM class definition
class VbPMAttrib: public Tango::SpectrumAttr
{
public:
	VbPMAttrib():SpectrumAttr("VbPM",
			Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~VbPMAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VbPM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VbPM_allowed(ty);}
};

//	Attribute VcPM class definition
class VcPMAttrib: public Tango::SpectrumAttr
{
public:
	VcPMAttrib():SpectrumAttr("VcPM",
			Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~VcPMAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VcPM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VcPM_allowed(ty);}
};

//	Attribute VdPM class definition
class VdPMAttrib: public Tango::SpectrumAttr
{
public:
	VdPMAttrib():SpectrumAttr("VdPM",
			Tango::DEV_DOUBLE, Tango::READ, 16384) {};
	~VdPMAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VdPM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VdPM_allowed(ty);}
};

//	Attribute ADCChannelA class definition
class ADCChannelAAttrib: public Tango::SpectrumAttr
{
public:
	ADCChannelAAttrib():SpectrumAttr("ADCChannelA",
			Tango::DEV_SHORT, Tango::READ, 250000) {};
	~ADCChannelAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ADCChannelA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ADCChannelA_allowed(ty);}
};

//	Attribute ADCChannelB class definition
class ADCChannelBAttrib: public Tango::SpectrumAttr
{
public:
	ADCChannelBAttrib():SpectrumAttr("ADCChannelB",
			Tango::DEV_SHORT, Tango::READ, 250000) {};
	~ADCChannelBAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ADCChannelB(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ADCChannelB_allowed(ty);}
};

//	Attribute ADCChannelC class definition
class ADCChannelCAttrib: public Tango::SpectrumAttr
{
public:
	ADCChannelCAttrib():SpectrumAttr("ADCChannelC",
			Tango::DEV_SHORT, Tango::READ, 250000) {};
	~ADCChannelCAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ADCChannelC(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ADCChannelC_allowed(ty);}
};

//	Attribute ADCChannelD class definition
class ADCChannelDAttrib: public Tango::SpectrumAttr
{
public:
	ADCChannelDAttrib():SpectrumAttr("ADCChannelD",
			Tango::DEV_SHORT, Tango::READ, 250000) {};
	~ADCChannelDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_ADCChannelD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ADCChannelD_allowed(ty);}
};

//	Attribute IaDD class definition
class IaDDAttrib: public Tango::SpectrumAttr
{
public:
	IaDDAttrib():SpectrumAttr("IaDD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~IaDDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_IaDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_IaDD_allowed(ty);}
};

//	Attribute IbDD class definition
class IbDDAttrib: public Tango::SpectrumAttr
{
public:
	IbDDAttrib():SpectrumAttr("IbDD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~IbDDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_IbDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_IbDD_allowed(ty);}
};

//	Attribute IcDD class definition
class IcDDAttrib: public Tango::SpectrumAttr
{
public:
	IcDDAttrib():SpectrumAttr("IcDD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~IcDDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_IcDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_IcDD_allowed(ty);}
};

//	Attribute IdDD class definition
class IdDDAttrib: public Tango::SpectrumAttr
{
public:
	IdDDAttrib():SpectrumAttr("IdDD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~IdDDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_IdDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_IdDD_allowed(ty);}
};

//	Attribute QaDD class definition
class QaDDAttrib: public Tango::SpectrumAttr
{
public:
	QaDDAttrib():SpectrumAttr("QaDD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~QaDDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QaDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QaDD_allowed(ty);}
};

//	Attribute QbDD class definition
class QbDDAttrib: public Tango::SpectrumAttr
{
public:
	QbDDAttrib():SpectrumAttr("QbDD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~QbDDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QbDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QbDD_allowed(ty);}
};

//	Attribute QcDD class definition
class QcDDAttrib: public Tango::SpectrumAttr
{
public:
	QcDDAttrib():SpectrumAttr("QcDD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~QcDDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QcDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QcDD_allowed(ty);}
};

//	Attribute QdDD class definition
class QdDDAttrib: public Tango::SpectrumAttr
{
public:
	QdDDAttrib():SpectrumAttr("QdDD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~QdDDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QdDD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QdDD_allowed(ty);}
};

//	Attribute UserData class definition
class UserDataAttrib: public Tango::SpectrumAttr
{
public:
	UserDataAttrib():SpectrumAttr("UserData",
			Tango::DEV_SHORT, Tango::READ, 256) {};
	~UserDataAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_UserData(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_UserData_allowed(ty);}
};

//	Attribute logs class definition
class logsAttrib: public Tango::SpectrumAttr
{
public:
	logsAttrib():SpectrumAttr("logs",
			Tango::DEV_STRING, Tango::READ, 2048) {};
	~logsAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_logs(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_logs_allowed(ty);}
};

//	Attribute XPosTD class definition
class XPosTDAttrib: public Tango::SpectrumAttr
{
public:
	XPosTDAttrib():SpectrumAttr("XPosTD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~XPosTDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XPosTD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XPosTD_allowed(ty);}
};

//	Attribute YPosTD class definition
class YPosTDAttrib: public Tango::SpectrumAttr
{
public:
	YPosTDAttrib():SpectrumAttr("YPosTD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~YPosTDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_YPosTD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_YPosTD_allowed(ty);}
};

//	Attribute QuadTD class definition
class QuadTDAttrib: public Tango::SpectrumAttr
{
public:
	QuadTDAttrib():SpectrumAttr("QuadTD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~QuadTDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QuadTD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QuadTD_allowed(ty);}
};

//	Attribute SumTD class definition
class SumTDAttrib: public Tango::SpectrumAttr
{
public:
	SumTDAttrib():SpectrumAttr("SumTD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~SumTDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SumTD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SumTD_allowed(ty);}
};

//	Attribute VaTD class definition
class VaTDAttrib: public Tango::SpectrumAttr
{
public:
	VaTDAttrib():SpectrumAttr("VaTD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VaTDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VaTD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VaTD_allowed(ty);}
};

//	Attribute VbTD class definition
class VbTDAttrib: public Tango::SpectrumAttr
{
public:
	VbTDAttrib():SpectrumAttr("VbTD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VbTDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VbTD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VbTD_allowed(ty);}
};

//	Attribute VcTD class definition
class VcTDAttrib: public Tango::SpectrumAttr
{
public:
	VcTDAttrib():SpectrumAttr("VcTD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VcTDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VcTD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VcTD_allowed(ty);}
};

//	Attribute VdTD class definition
class VdTDAttrib: public Tango::SpectrumAttr
{
public:
	VdTDAttrib():SpectrumAttr("VdTD",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VdTDAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VdTD(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VdTD_allowed(ty);}
};

//	Attribute VaFA class definition
class VaFAAttrib: public Tango::SpectrumAttr
{
public:
	VaFAAttrib():SpectrumAttr("VaFA",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VaFAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VaFA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VaFA_allowed(ty);}
};

//	Attribute VbFA class definition
class VbFAAttrib: public Tango::SpectrumAttr
{
public:
	VbFAAttrib():SpectrumAttr("VbFA",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VbFAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VbFA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VbFA_allowed(ty);}
};

//	Attribute VcFA class definition
class VcFAAttrib: public Tango::SpectrumAttr
{
public:
	VcFAAttrib():SpectrumAttr("VcFA",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VcFAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VcFA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VcFA_allowed(ty);}
};

//	Attribute VdFA class definition
class VdFAAttrib: public Tango::SpectrumAttr
{
public:
	VdFAAttrib():SpectrumAttr("VdFA",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~VdFAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_VdFA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_VdFA_allowed(ty);}
};

//	Attribute XPosFA class definition
class XPosFAAttrib: public Tango::SpectrumAttr
{
public:
	XPosFAAttrib():SpectrumAttr("XPosFA",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~XPosFAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_XPosFA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_XPosFA_allowed(ty);}
};

//	Attribute SumFA class definition
class SumFAAttrib: public Tango::SpectrumAttr
{
public:
	SumFAAttrib():SpectrumAttr("SumFA",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~SumFAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_SumFA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SumFA_allowed(ty);}
};

//	Attribute QuadFA class definition
class QuadFAAttrib: public Tango::SpectrumAttr
{
public:
	QuadFAAttrib():SpectrumAttr("QuadFA",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~QuadFAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_QuadFA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_QuadFA_allowed(ty);}
};

//	Attribute YPosFA class definition
class YPosFAAttrib: public Tango::SpectrumAttr
{
public:
	YPosFAAttrib():SpectrumAttr("YPosFA",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~YPosFAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_YPosFA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_YPosFA_allowed(ty);}
};

//	Attribute lmt_hFA class definition
class lmt_hFAAttrib: public Tango::SpectrumAttr
{
public:
	lmt_hFAAttrib():SpectrumAttr("lmt_hFA",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~lmt_hFAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_lmt_hFA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_lmt_hFA_allowed(ty);}
};

//	Attribute lmt_lFA class definition
class lmt_lFAAttrib: public Tango::SpectrumAttr
{
public:
	lmt_lFAAttrib():SpectrumAttr("lmt_lFA",
			Tango::DEV_DOUBLE, Tango::READ, 250000) {};
	~lmt_lFAAttrib() {};
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<LiberaBrilliancePlus *>(dev))->read_lmt_lFA(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<LiberaBrilliancePlus *>(dev))->is_lmt_lFA_allowed(ty);}
};


//=========================================
//	Define classes for commands
//=========================================
//	Command GetParameters class definition
class GetParametersClass : public Tango::Command
{
public:
	GetParametersClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	GetParametersClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~GetParametersClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_GetParameters_allowed(any);}
};

//	Command UnfreezeDDBuffer class definition
class UnfreezeDDBufferClass : public Tango::Command
{
public:
	UnfreezeDDBufferClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	UnfreezeDDBufferClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~UnfreezeDDBufferClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_UnfreezeDDBuffer_allowed(any);}
};

//	Command EnableDDBufferFreezing class definition
class EnableDDBufferFreezingClass : public Tango::Command
{
public:
	EnableDDBufferFreezingClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	EnableDDBufferFreezingClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~EnableDDBufferFreezingClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_EnableDDBufferFreezing_allowed(any);}
};

//	Command DisableDDBufferFreezing class definition
class DisableDDBufferFreezingClass : public Tango::Command
{
public:
	DisableDDBufferFreezingClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	DisableDDBufferFreezingClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~DisableDDBufferFreezingClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DisableDDBufferFreezing_allowed(any);}
};

//	Command EnableDD class definition
class EnableDDClass : public Tango::Command
{
public:
	EnableDDClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	EnableDDClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~EnableDDClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_EnableDD_allowed(any);}
};

//	Command DisableDD class definition
class DisableDDClass : public Tango::Command
{
public:
	DisableDDClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	DisableDDClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~DisableDDClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DisableDD_allowed(any);}
};

//	Command EnableSA class definition
class EnableSAClass : public Tango::Command
{
public:
	EnableSAClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	EnableSAClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~EnableSAClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_EnableSA_allowed(any);}
};

//	Command DisableSA class definition
class DisableSAClass : public Tango::Command
{
public:
	DisableSAClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	DisableSAClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~DisableSAClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DisableSA_allowed(any);}
};

//	Command ResetPMNotification class definition
class ResetPMNotificationClass : public Tango::Command
{
public:
	ResetPMNotificationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	ResetPMNotificationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~ResetPMNotificationClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ResetPMNotification_allowed(any);}
};

//	Command ResetInterlockNotification class definition
class ResetInterlockNotificationClass : public Tango::Command
{
public:
	ResetInterlockNotificationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	ResetInterlockNotificationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~ResetInterlockNotificationClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ResetInterlockNotification_allowed(any);}
};

//	Command SetInterlockConfiguration class definition
class SetInterlockConfigurationClass : public Tango::Command
{
public:
	SetInterlockConfigurationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetInterlockConfigurationClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetInterlockConfigurationClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SetInterlockConfiguration_allowed(any);}
};

//	Command EnableADC class definition
class EnableADCClass : public Tango::Command
{
public:
	EnableADCClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	EnableADCClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~EnableADCClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_EnableADC_allowed(any);}
};

//	Command DisableADC class definition
class DisableADCClass : public Tango::Command
{
public:
	DisableADCClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	DisableADCClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~DisableADCClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DisableADC_allowed(any);}
};

//	Command SetTimeOnNextTrigger class definition
class SetTimeOnNextTriggerClass : public Tango::Command
{
public:
	SetTimeOnNextTriggerClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetTimeOnNextTriggerClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetTimeOnNextTriggerClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SetTimeOnNextTrigger_allowed(any);}
};

//	Command ReadFAData class definition
class ReadFADataClass : public Tango::Command
{
public:
	ReadFADataClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	ReadFADataClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~ReadFADataClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ReadFAData_allowed(any);}
};

//	Command WriteFAData class definition
class WriteFADataClass : public Tango::Command
{
public:
	WriteFADataClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	WriteFADataClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~WriteFADataClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_WriteFAData_allowed(any);}
};

//	Command SaveDSCParameters class definition
class SaveDSCParametersClass : public Tango::Command
{
public:
	SaveDSCParametersClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SaveDSCParametersClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SaveDSCParametersClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SaveDSCParameters_allowed(any);}
};

//	Command ReloadSystemProperties class definition
class ReloadSystemPropertiesClass : public Tango::Command
{
public:
	ReloadSystemPropertiesClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	ReloadSystemPropertiesClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~ReloadSystemPropertiesClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ReloadSystemProperties_allowed(any);}
};

//	Command SetRefIncoherence class definition
class SetRefIncoherenceClass : public Tango::Command
{
public:
	SetRefIncoherenceClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetRefIncoherenceClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetRefIncoherenceClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SetRefIncoherence_allowed(any);}
};

//	Command MagicCommand class definition
class MagicCommandClass : public Tango::Command
{
public:
	MagicCommandClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	MagicCommandClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~MagicCommandClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_MagicCommand_allowed(any);}
};

//	Command EnableTDBufferFreezing class definition
class EnableTDBufferFreezingClass : public Tango::Command
{
public:
	EnableTDBufferFreezingClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	EnableTDBufferFreezingClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~EnableTDBufferFreezingClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_EnableTDBufferFreezing_allowed(any);}
};

//	Command DisableTDBufferFreezing class definition
class DisableTDBufferFreezingClass : public Tango::Command
{
public:
	DisableTDBufferFreezingClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	DisableTDBufferFreezingClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~DisableTDBufferFreezingClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DisableTDBufferFreezing_allowed(any);}
};

//	Command EnableTD class definition
class EnableTDClass : public Tango::Command
{
public:
	EnableTDClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	EnableTDClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~EnableTDClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_EnableTD_allowed(any);}
};

//	Command DisableTD class definition
class DisableTDClass : public Tango::Command
{
public:
	DisableTDClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	DisableTDClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~DisableTDClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DisableTD_allowed(any);}
};

//	Command UnfreezeTDBuffer class definition
class UnfreezeTDBufferClass : public Tango::Command
{
public:
	UnfreezeTDBufferClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	UnfreezeTDBufferClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~UnfreezeTDBufferClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_UnfreezeTDBuffer_allowed(any);}
};

//	Command EnableSP class definition
class EnableSPClass : public Tango::Command
{
public:
	EnableSPClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	EnableSPClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~EnableSPClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_EnableSP_allowed(any);}
};

//	Command DisableSP class definition
class DisableSPClass : public Tango::Command
{
public:
	DisableSPClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	DisableSPClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~DisableSPClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DisableSP_allowed(any);}
};

//	Command ForceInitSettings class definition
class ForceInitSettingsClass : public Tango::Command
{
public:
	ForceInitSettingsClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	ForceInitSettingsClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~ForceInitSettingsClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_ForceInitSettings_allowed(any);}
};

//	Command SetTraceLevel class definition
class SetTraceLevelClass : public Tango::Command
{
public:
	SetTraceLevelClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SetTraceLevelClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SetTraceLevelClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_SetTraceLevel_allowed(any);}
};

//	Command EnableFA class definition
class EnableFAClass : public Tango::Command
{
public:
	EnableFAClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	EnableFAClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~EnableFAClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_EnableFA_allowed(any);}
};

//	Command DisableFA class definition
class DisableFAClass : public Tango::Command
{
public:
	DisableFAClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	DisableFAClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~DisableFAClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<LiberaBrilliancePlus *>(dev))->is_DisableFA_allowed(any);}
};


/**
 *	The LiberaBrilliancePlusClass singleton definition
 */

#ifdef _TG_WINDOWS_
class __declspec(dllexport)  LiberaBrilliancePlusClass : public Tango::DeviceClass
#else
class LiberaBrilliancePlusClass : public Tango::DeviceClass
#endif
{
	/*----- PROTECTED REGION ID(LiberaBrilliancePlusClass::Additionnal DServer data members) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrilliancePlusClass::Additionnal DServer data members

	//	Class properties data members
	public:
		//	InterlockConfiguration:	The user defined interlock configuration. This is the configuration that should be applied on the Libera in case the device `finds`
		//  the Libera in its default startup configuration when it is itself starting up or executing its Init TANGO command. This configuration
		//  can also be applied using the dedicated ``SetInterlockConfiguration`` expert command.
		//  Parameters mapping:
		//  [0] Interlock : mode - [0]: disabled, [1]: enabled, [3]: enabled with gain dependency
		//  [1] Interlock : threshold : X low in mm
		//  [2] Interlock : threshold : X high in mm
		//  [3] Interlock : threshold : Z low in mm (i.e. Y low in the Libera terminology)
		//  [4] Interlock : threshold : Z high in mm (i.e. Y high in the Libera terminology)
		//  [5] Interlock : overflow limit (ADC threshold)
		//  [6] Interlock : overflow duration (num of overloaded ADC samples before raising intlck)
		//  [7] Interlock : gain limit in dBm  (intlck not active under this limit) - valid range is [-60, 0]
		vector<Tango::DevDouble>	interlockConfiguration;
		//	EnableDDOptionalData:	Enables/Disables  DD optional data (IxDD and QxDD)
		Tango::DevBoolean	enableDDOptionalData;
		//	EnableSAOptionalData:	Enables/disables SA optional Data (currently not used)
		Tango::DevBoolean	enableSAOptionalData;
		//	EnableSAHistoryOptionalData:	Enables/disables SA History optional data (sum history)
		Tango::DevBoolean	enableSAHistoryOptionalData;
		//	EnableADCOptionalData:	Enables/disables ADC optional data (currently not used)
		Tango::DevBoolean	enableADCOptionalData;
		//	Institute:	0: TANGO_INSTITUTE (GENERIC)
		//  1: ALBA
		//  2: ESRF
		//  3: ELETTRA
		//  4: SOLEIL
		Tango::DevShort	institute;
		//	EnableTDOptionalData:	Enables/Disables  TD optional data (IxDD and QxDD)
		Tango::DevBoolean	enableTDOptionalData;
		//	InterlockGainDependentThreshold:	
		string	interlockGainDependentThreshold;
	public:
		//	write class properties data members
		Tango::DbData	cl_prop;
		Tango::DbData	cl_def_prop;
		Tango::DbData	dev_def_prop;
	
		//	Method prototypes
		static LiberaBrilliancePlusClass *init(const char *);
		static LiberaBrilliancePlusClass *instance();
		~LiberaBrilliancePlusClass();
		Tango::DbDatum	get_class_property(string &);
		Tango::DbDatum	get_default_device_property(string &);
		Tango::DbDatum	get_default_class_property(string &);
	
	protected:
		LiberaBrilliancePlusClass(string &);
		static LiberaBrilliancePlusClass *_instance;
		void command_factory();
		void attribute_factory(vector<Tango::Attr *> &);
		void write_class_property();
		void set_default_property();
		void get_class_property();
		string get_cvstag();
		string get_cvsroot();
	
	private:
		void device_factory(const Tango::DevVarStringArray *);
		void create_static_attribute_list(vector<Tango::Attr *> &);
		void erase_dynamic_attributes(const Tango::DevVarStringArray *,vector<Tango::Attr *> &);
		vector<string>	defaultAttList;
		Tango::Attr *get_attr_object_by_name(vector<Tango::Attr *> &att_list, string attname);
};

}	//	End of namespace

#endif   //	LiberaBrilliancePlus_H
